{ "D3Script":[ 
{"@rid":"33:1", "@class":"D3Script"
, "name":"Resizable Force Layout"
 ,"dataScript":""
 ,"description":"Test of a resizeable force layout diagram"
 ,"style":""
 ,"script":"//Original data\r\n\t\t\tvar dataset = {\r\n\t\t\t\tnodes: [\r\n\t\t\t\t\t{ name: 'Adam' },\r\n\t\t\t\t\t{ name: 'Bob' },\r\n\t\t\t\t\t{ name: 'Carrie' },\r\n\t\t\t\t\t{ name: 'Donovan' },\r\n\t\t\t\t\t{ name: 'Edward' },\r\n\t\t\t\t\t{ name: 'Felicity' },\r\n\t\t\t\t\t{ name: 'George' },\r\n\t\t\t\t\t{ name: 'Hannah' },\r\n\t\t\t\t\t{ name: 'Iris' },\r\n\t\t\t\t\t{ name: 'Jerry' }\r\n\t\t\t\t],\r\n\t\t\t\tlinks: [\r\n\t\t\t\t\t{ source: 0, target: 1 },\r\n\t\t\t\t\t{ source: 0, target: 2 },\r\n\t\t\t\t\t{ source: 0, target: 3 },\r\n\t\t\t\t\t{ source: 0, target: 4 },\r\n\t\t\t\t\t{ source: 1, target: 5 },\r\n\t\t\t\t\t{ source: 2, target: 5 },\r\n\t\t\t\t\t{ source: 2, target: 5 },\r\n\t\t\t\t\t{ source: 3, target: 4 },\r\n\t\t\t\t\t{ source: 5, target: 8 },\r\n\t\t\t\t\t{ source: 5, target: 9 },\r\n\t\t\t\t\t{ source: 6, target: 7 },\r\n\t\t\t\t\t{ source: 7, target: 8 },\r\n\t\t\t\t\t{ source: 8, target: 9 }\r\n\t\t\t\t]\r\n\t\t\t};\r\n\r\n\t/* Set the diagrams Height & Width */\r\n    var h = $('#chart').height(), w = $('#chart').width();\r\n/* Set the color scale we want to use */\r\n    var color = d3.scale.category20();\r\n/* Establish/instantiate an SVG container object */\r\n    var svg = d3.select('#chart')\r\n                    .append('svg')\r\n                    .attr('height',h)\r\n                    .attr('width',w);\r\n/* Build the directional arrows for the links/edges */\r\n        svg.append('svg:defs')\r\n                    .selectAll('marker')\r\n                    .data(['end']) \r\n                    .enter().append('svg:marker')\r\n                    .attr('id', String)\r\n                    .attr('viewBox', '0 -5 10 10')\r\n                    .attr('refX', 15)\r\n                    .attr('refY', -1.5)\r\n                    .attr('markerWidth', 6)\r\n                    .attr('markerHeight', 6)\r\n                    .attr('orient', 'auto')\r\n                    .append('svg:path')\r\n                    .attr('d', 'M0,-5L10,0L0,5');\r\n\r\n    /* Draw the node labels first */\r\n   var texts = svg.selectAll('text')\r\n                    .data(dataset.nodes)\r\n                    .enter()\r\n                    .append('text')\r\n                    .attr('fill', 'black')\r\n                    .attr('font-family', 'sans-serif')\r\n                    .attr('font-size', '10px')\r\n                    .text(function(d) { return d.name; }); \r\n    /* Establish the dynamic force behavor of the nodes */\r\n    var force = d3.layout.force()\r\n                    .nodes(dataset.nodes)\r\n                    .links(dataset.links)\r\n                    .size([w,h])\r\n                    .linkDistance([250])\r\n                    .charge([-1500])\r\n                    .gravity(0.3)\r\n                    .start();\r\n    /* Draw the edges/links between the nodes */\r\n    var edges = svg.selectAll('line')\r\n                    .data(dataset.links)\r\n                    .enter()\r\n                    .append('line')\r\n                    .style('stroke', '#ccc')\r\n                    .style('stroke-width', 1)\r\n                    .attr('marker-end', 'url(#end)');\r\n    /* Draw the nodes themselves */                \r\n    var nodes = svg.selectAll('circle')\r\n                    .data(dataset.nodes)\r\n                    .enter()\r\n                    .append('circle')\r\n                    .attr('r', 20)\r\n                    .attr('opacity', 0.5)\r\n                    .style('fill', function(d,i) { return color(i); })\r\n                    .call(force.drag);\r\n    /* Run the Force effect */\r\n    force.on('tick', function() {\r\n               edges.attr('x1', function(d) { return d.source.x; })\r\n                    .attr('y1', function(d) { return d.source.y; })\r\n                    .attr('x2', function(d) { return d.target.x; })\r\n                    .attr('y2', function(d) { return d.target.y; });\r\n               nodes.attr('cx', function(d) { return d.x; })\r\n                    .attr('cy', function(d) { return d.y; })\r\n               texts.attr('transform', function(d) {\r\n                        return 'translate(' + d.x + ',' + d.y + ')';\r\n                        });\r\n               }); // End tick func\r\n\r\nfunction resize(e){\r\n    // get width/height with container selector (body also works)\r\n    // or use other method of calculating desired values\r\n    var width = $('#chart').width(); \r\n    var height = $('#chart').height(); \r\n\r\n    // set attrs and 'resume' force \r\n    svg.attr('width', width);\r\n    svg.attr('height', height);\r\n    force.size([width, height]).resume();\r\n}\r\n\r\nd3.select(window).on('resize', resize);"
 ,"plugins": [] },
{"@rid":"33:4", "@class":"D3Script"
, "name":"Line Chart Test"
 ,"dataScript":""
 ,"description":"Pasted code from Nate's code vault at http://natescodevault.com/"
 ,"style":".data-line {\r\n\tstroke: #F00;\r\n\tstroke-width: 2;\r\n\tfill: none;\r\n\tstroke-dasharray: 0;\r\n}\r\n\r\npath {\r\n\tstroke: #CDCDCD;\r\n\tstroke-width: 1;\r\n\tstroke-dasharray: 0;\r\n\tfill: none;\r\n}\r\n\r\ntext {\r\n\tfont-family: Arial;\r\n\tfont-size: 8pt;\r\n\tfill: #787878;\r\n}\r\n\r\nline {\r\n\tstroke: #CDCDCD;\r\n\tstroke-dasharray: 3 3;\r\n\tfill: none;\r\n}\r\n\r\n.data-point {\r\n\tstroke: #F00;\r\n\tstroke-width: 2;\r\n\tfill: #FFF;\r\n}"
 ,"script":"/**\r\n * User: nross\r\n * Date: 11/15/11\r\n * Time: 9:12 AM\r\n */\r\nvar w = 600,\r\n\th = 400;\r\n\r\nvar maxDataPointsForDots = 50,\r\n\ttransitionDuration = 1000;\r\n\r\nvar svg = null,\r\n\tyAxisGroup = null,\r\n\txAxisGroup = null,\r\n\tdataCirclesGroup = null,\r\n\tdataLinesGroup = null;\r\n\r\nfunction draw() {\r\n\tvar data = generateData();\r\n\tvar m = 40;\r\n\tvar max = d3.max(data, function(d) { return d.value });\r\n\tvar min = 0;\r\n\tvar pointRadius = 4;\r\n\tvar xScale = d3.time.scale().range([0, w - m * 2]).domain([data[0].date, data[data.length - 1].date]);\r\n\tvar yScale = d3.scale.linear().range([h - m * 2, 0]).domain([min, max]);\r\n\r\n\tvar xAxis = d3.svg.axis().scale(xScale).tickSize(h - m * 2).tickPadding(10).ticks(7);\r\n\tvar yAxis = d3.svg.axis().scale(yScale).orient('left').tickSize(-w + m * 2).tickPadding(10);\r\n\tvar t = null;\r\n\r\n\tsvg = d3.select('#chart').select('svg').select('g');\r\n\tif (svg.empty()) {\r\n\t\tsvg = d3.select('#chart')\r\n\t\t\t.append('svg:svg')\r\n\t\t\t\t.attr('width', w)\r\n\t\t\t\t.attr('height', h)\r\n\t\t\t\t.attr('class', 'viz')\r\n\t\t\t.append('svg:g')\r\n\t\t\t\t.attr('transform', 'translate(' + m + ',' + m + ')');\r\n\t}\r\n\r\n\tt = svg.transition().duration(transitionDuration);\r\n\r\n\t// y ticks and labels\r\n\tif (!yAxisGroup) {\r\n\t\tyAxisGroup = svg.append('svg:g')\r\n\t\t\t.attr('class', 'yTick')\r\n\t\t\t.call(yAxis);\r\n\t}\r\n\telse {\r\n\t\tt.select('.yTick').call(yAxis);\r\n\t}\r\n\r\n\t// x ticks and labels\r\n\tif (!xAxisGroup) {\r\n\t\txAxisGroup = svg.append('svg:g')\r\n\t\t\t.attr('class', 'xTick')\r\n\t\t\t.call(xAxis);\r\n\t}\r\n\telse {\r\n\t\tt.select('.xTick').call(xAxis);\r\n\t}\r\n\r\n\t// Draw the lines\r\n\tif (!dataLinesGroup) {\r\n\t\tdataLinesGroup = svg.append('svg:g');\r\n\t}\r\n\r\n\tvar dataLines = dataLinesGroup.selectAll('.data-line')\r\n\t\t.data(data);\r\n\r\n\tdataLines\r\n\t\t.enter()\r\n\t\t.append('svg:line')\r\n\t\t\t.attr('class', 'data-line')\r\n\t\t\t.style('opacity', 1e-6)\r\n\t\t\t.attr('x1', function(d, i) { return (i > 0) ? xScale(data[i - 1].date) : xScale(d.date); })\r\n\t\t\t.attr('y1', function() { return yScale(0); })\r\n\t\t\t.attr('x2', function(d) { return xScale(d.date); })\r\n\t\t\t.attr('y2', function() { return yScale(0); })\r\n\t\t.transition()\r\n\t\t.delay(transitionDuration / 2)\r\n\t\t.duration(transitionDuration)\r\n\t\t\t.style('opacity', 1)\r\n\t\t\t.attr('x1', function(d, i) { return (i > 0) ? xScale(data[i - 1].date) : xScale(d.date); })\r\n\t\t\t.attr('y1', function(d, i) { return (i > 0) ? yScale(data[i - 1].value) : yScale(d.value); })\r\n\t\t\t.attr('x2', function(d) { return xScale(d.date); })\r\n\t\t\t.attr('y2', function(d) { return yScale(d.value); });\r\n\r\n\tdataLines\r\n\t\t.transition()\r\n\t\t.duration(transitionDuration)\r\n\t\t\t.style('opacity', 1)\r\n\t\t\t.attr('x1', function(d, i) { return (i > 0) ? xScale(data[i - 1].date) : xScale(d.date); })\r\n\t\t\t.attr('y1', function(d, i) { return (i > 0) ? yScale(data[i - 1].value) : yScale(d.value); })\r\n\t\t\t.attr('x2', function(d) { return xScale(d.date); })\r\n\t\t\t.attr('y2', function(d) { return yScale(d.value); });\r\n\r\n\tdataLines\r\n\t\t.exit()\r\n\t\t.transition()\r\n\t\t.duration(transitionDuration)\r\n\t\t\t.style('opacity', 1e-6)\r\n\t\t\t.attr('y1', function() { return yScale(0); })\r\n\t\t\t.attr('y2', function() { return yScale(0); })\r\n\t\t\t.remove();\r\n\r\n\t// Draw the points\r\n\tif (!dataCirclesGroup) {\r\n\t\tdataCirclesGroup = svg.append('svg:g');\r\n\t}\r\n\r\n\tvar circles = dataCirclesGroup.selectAll('.data-point')\r\n\t\t.data(data);\r\n\r\n\tcircles\r\n\t\t.enter()\r\n\t\t\t.append('svg:circle')\r\n\t\t\t\t.attr('class', 'data-point')\r\n\t\t\t\t.style('opacity', 1e-6)\r\n\t\t\t\t.attr('cx', function(d) { return xScale(d.date) })\r\n\t\t\t\t.attr('cy', function() { return yScale(0) })\r\n\t\t\t\t.attr('r', function() { return (data.length <= maxDataPointsForDots) ? pointRadius : 0 })\r\n\t\t\t.transition()\r\n\t\t\t.duration(transitionDuration)\r\n\t\t\t\t.style('opacity', 1)\r\n\t\t\t\t.attr('cx', function(d) { return xScale(d.date) })\r\n\t\t\t\t.attr('cy', function(d) { return yScale(d.value) });\r\n\r\n\tcircles\r\n\t\t.transition()\r\n\t\t.duration(transitionDuration)\r\n\t\t\t.attr('cx', function(d) { return xScale(d.date) })\r\n\t\t\t.attr('cy', function(d) { return yScale(d.value) })\r\n\t\t\t.attr('r', function() { return (data.length <= maxDataPointsForDots) ? pointRadius : 0 })\r\n\t\t\t.style('opacity', 1);\r\n\r\n\tcircles\r\n\t\t.exit()\r\n\t\t\t.transition()\r\n\t\t\t.duration(transitionDuration)\r\n\t\t\t\t// Leave the cx transition off. Allowing the points to fall where they lie is best.\r\n\t\t\t\t//.attr('cx', function(d, i) { return xScale(i) })\r\n\t\t\t\t.attr('cy', function() { return yScale(0) })\r\n\t\t\t\t.style(\"opacity\", 1e-6)\r\n\t\t\t\t.remove();\r\n}\r\n\r\nfunction generateData() {\r\n\tvar data = [];\r\n\tvar i = Math.max(Math.round(Math.random()*100), 3);\r\n\r\n\twhile (i--) {\r\n\t\tvar date = new Date();\r\n\t\tdate.setDate(date.getDate() - i);\r\n\t\tdate.setHours(0, 0, 0, 0);\r\n\t\tdata.push({'value' : Math.round(Math.random()*1200), 'date' : date});\r\n\t}\r\n\treturn data;\r\n}\r\n\r\nd3.select('#button').on('click', draw);\r\ndraw();"
 ,"plugins": [] },
{"@rid":"33:5", "@class":"D3Script"
, "name":"Boxplot example"
 ,"dataScript":"Expt,Run,Speed\r\n1,1,850\r\n1,2,740\r\n1,3,900\r\n1,4,1070\r\n1,5,930\r\n1,6,850\r\n1,7,950\r\n1,8,980\r\n1,9,980\r\n1,10,880\r\n1,11,1000\r\n1,12,980\r\n1,13,930\r\n1,14,650\r\n1,15,760\r\n1,16,810\r\n1,17,1000\r\n1,18,1000\r\n1,19,960\r\n1,20,960\r\n2,1,960\r\n2,2,940\r\n2,3,960\r\n2,4,940\r\n2,5,880\r\n2,6,800\r\n2,7,850\r\n2,8,880\r\n2,9,900\r\n2,10,840\r\n2,11,830\r\n2,12,790\r\n2,13,810\r\n2,14,880\r\n2,15,880\r\n2,16,830\r\n2,17,800\r\n2,18,790\r\n2,19,760\r\n2,20,800\r\n3,1,880\r\n3,2,880\r\n3,3,880\r\n3,4,860\r\n3,5,720\r\n3,6,720\r\n3,7,620\r\n3,8,860\r\n3,9,970\r\n3,10,950\r\n3,11,880\r\n3,12,910\r\n3,13,850\r\n3,14,870\r\n3,15,840\r\n3,16,840\r\n3,17,850\r\n3,18,840\r\n3,19,840\r\n3,20,840\r\n4,1,890\r\n4,2,810\r\n4,3,810\r\n4,4,820\r\n4,5,800\r\n4,6,770\r\n4,7,760\r\n4,8,740\r\n4,9,750\r\n4,10,760\r\n4,11,910\r\n4,12,920\r\n4,13,890\r\n4,14,860\r\n4,15,880\r\n4,16,720\r\n4,17,840\r\n4,18,850\r\n4,19,850\r\n4,20,780\r\n5,1,890\r\n5,2,840\r\n5,3,780\r\n5,4,810\r\n5,5,760\r\n5,6,810\r\n5,7,790\r\n5,8,810\r\n5,9,820\r\n5,10,850\r\n5,11,870\r\n5,12,870\r\n5,13,810\r\n5,14,740\r\n5,15,810\r\n5,16,940\r\n5,17,950\r\n5,18,800\r\n5,19,810\r\n5,20,870"
 ,"description":"Example of a box plot from http://bl.ocks.org/mbostock/4061502"
 ,"style":"body {\r\n  font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\r\n  color: white;\r\n}\r\n\r\n.box {\r\n  font: 10px sans-serif;\r\n  color: white;\r\n  fill: white;\r\n}\r\n\r\nsvg {\r\n  background: black;\r\n  color: white;\r\n}\r\n\r\n.box line,\r\n.box rect,\r\n.box circle {\r\n  fill: darkgray;\r\n  stroke: lightgray;\r\n  stroke-width: 1.5px;\r\n}\r\n\r\n.box .center {\r\n  stroke-dasharray: 3,3;\r\n  fill: red;\r\n}\r\n\r\n.box .outlier {\r\n  fill: none;\r\n  stroke: #ccc;\r\n}"
 ,"script":"(function() {\r\n\r\n// Inspired by http://informationandvisualization.de/blog/box-plot\r\nd3.box = function() {\r\n  var width = 1,\r\n      height = 1,\r\n      duration = 0,\r\n      domain = null,\r\n      value = Number,\r\n      whiskers = boxWhiskers,\r\n      quartiles = boxQuartiles,\r\n      tickFormat = null;\r\n\r\n  // For each small multiple…\r\n  function box(g) {\r\n    g.each(function(d, i) {\r\n      d = d.map(value).sort(d3.ascending);\r\n      var g = d3.select(this),\r\n          n = d.length,\r\n          min = d[0],\r\n          max = d[n - 1];\r\n\r\n      // Compute quartiles. Must return exactly 3 elements.\r\n      var quartileData = d.quartiles = quartiles(d);\r\n\r\n      // Compute whiskers. Must return exactly 2 elements, or null.\r\n      var whiskerIndices = whiskers && whiskers.call(this, d, i),\r\n          whiskerData = whiskerIndices && whiskerIndices.map(function(i) { return d[i]; });\r\n\r\n      // Compute outliers. If no whiskers are specified, all data are \"outliers\".\r\n      // We compute the outliers as indices, so that we can join across transitions!\r\n      var outlierIndices = whiskerIndices\r\n          ? d3.range(0, whiskerIndices[0]).concat(d3.range(whiskerIndices[1] + 1, n))\r\n          : d3.range(n);\r\n\r\n      // Compute the new x-scale.\r\n      var x1 = d3.scale.linear()\r\n          .domain(domain && domain.call(this, d, i) || [min, max])\r\n          .range([height, 0]);\r\n\r\n      // Retrieve the old x-scale, if this is an update.\r\n      var x0 = this.__chart__ || d3.scale.linear()\r\n          .domain([0, Infinity])\r\n          .range(x1.range());\r\n\r\n      // Stash the new scale.\r\n      this.__chart__ = x1;\r\n\r\n      // Note: the box, median, and box tick elements are fixed in number,\r\n      // so we only have to handle enter and update. In contrast, the outliers\r\n      // and other elements are variable, so we need to exit them! Variable\r\n      // elements also fade in and out.\r\n\r\n      // Update center line: the vertical line spanning the whiskers.\r\n      var center = g.selectAll(\"line.center\")\r\n          .data(whiskerData ? [whiskerData] : []);\r\n\r\n      center.enter().insert(\"line\", \"rect\")\r\n          .attr(\"class\", \"center\")\r\n          .attr(\"x1\", width / 2)\r\n          .attr(\"y1\", function(d) { return x0(d[0]); })\r\n          .attr(\"x2\", width / 2)\r\n          .attr(\"y2\", function(d) { return x0(d[1]); })\r\n          .style(\"opacity\", 1e-6)\r\n        .transition()\r\n          .duration(duration)\r\n          .style(\"opacity\", 1)\r\n          .attr(\"y1\", function(d) { return x1(d[0]); })\r\n          .attr(\"y2\", function(d) { return x1(d[1]); });\r\n\r\n      center.transition()\r\n          .duration(duration)\r\n          .style(\"opacity\", 1)\r\n          .attr(\"y1\", function(d) { return x1(d[0]); })\r\n          .attr(\"y2\", function(d) { return x1(d[1]); });\r\n\r\n      center.exit().transition()\r\n          .duration(duration)\r\n          .style(\"opacity\", 1e-6)\r\n          .attr(\"y1\", function(d) { return x1(d[0]); })\r\n          .attr(\"y2\", function(d) { return x1(d[1]); })\r\n          .remove();\r\n\r\n      // Update innerquartile box.\r\n      var box = g.selectAll(\"rect.box\")\r\n          .data([quartileData]);\r\n\r\n      box.enter().append(\"rect\")\r\n          .attr(\"class\", \"box\")\r\n          .attr(\"x\", 0)\r\n          .attr(\"y\", function(d) { return x0(d[2]); })\r\n          .attr(\"width\", width)\r\n          .attr(\"height\", function(d) { return x0(d[0]) - x0(d[2]); })\r\n        .transition()\r\n          .duration(duration)\r\n          .attr(\"y\", function(d) { return x1(d[2]); })\r\n          .attr(\"height\", function(d) { return x1(d[0]) - x1(d[2]); });\r\n\r\n      box.transition()\r\n          .duration(duration)\r\n          .attr(\"y\", function(d) { return x1(d[2]); })\r\n          .attr(\"height\", function(d) { return x1(d[0]) - x1(d[2]); });\r\n\r\n      // Update median line.\r\n      var medianLine = g.selectAll(\"line.median\")\r\n          .data([quartileData[1]]);\r\n\r\n      medianLine.enter().append(\"line\")\r\n          .attr(\"class\", \"median\")\r\n          .attr(\"x1\", 0)\r\n          .attr(\"y1\", x0)\r\n          .attr(\"x2\", width)\r\n          .attr(\"y2\", x0)\r\n        .transition()\r\n          .duration(duration)\r\n          .attr(\"y1\", x1)\r\n          .attr(\"y2\", x1);\r\n\r\n      medianLine.transition()\r\n          .duration(duration)\r\n          .attr(\"y1\", x1)\r\n          .attr(\"y2\", x1);\r\n\r\n      // Update whiskers.\r\n      var whisker = g.selectAll(\"line.whisker\")\r\n          .data(whiskerData || []);\r\n\r\n      whisker.enter().insert(\"line\", \"circle, text\")\r\n          .attr(\"class\", \"whisker\")\r\n          .attr(\"x1\", 0)\r\n          .attr(\"y1\", x0)\r\n          .attr(\"x2\", width)\r\n          .attr(\"y2\", x0)\r\n          .style(\"opacity\", 1e-6)\r\n        .transition()\r\n          .duration(duration)\r\n          .attr(\"y1\", x1)\r\n          .attr(\"y2\", x1)\r\n          .style(\"opacity\", 1);\r\n\r\n      whisker.transition()\r\n          .duration(duration)\r\n          .attr(\"y1\", x1)\r\n          .attr(\"y2\", x1)\r\n          .style(\"opacity\", 1);\r\n\r\n      whisker.exit().transition()\r\n          .duration(duration)\r\n          .attr(\"y1\", x1)\r\n          .attr(\"y2\", x1)\r\n          .style(\"opacity\", 1e-6)\r\n          .remove();\r\n\r\n      // Update outliers.\r\n      var outlier = g.selectAll(\"circle.outlier\")\r\n          .data(outlierIndices, Number);\r\n\r\n      outlier.enter().insert(\"circle\", \"text\")\r\n          .attr(\"class\", \"outlier\")\r\n          .attr(\"r\", 5)\r\n          .attr(\"cx\", width / 2)\r\n          .attr(\"cy\", function(i) { return x0(d[i]); })\r\n          .style(\"opacity\", 1e-6)\r\n        .transition()\r\n          .duration(duration)\r\n          .attr(\"cy\", function(i) { return x1(d[i]); })\r\n          .style(\"opacity\", 1);\r\n\r\n      outlier.transition()\r\n          .duration(duration)\r\n          .attr(\"cy\", function(i) { return x1(d[i]); })\r\n          .style(\"opacity\", 1);\r\n\r\n      outlier.exit().transition()\r\n          .duration(duration)\r\n          .attr(\"cy\", function(i) { return x1(d[i]); })\r\n          .style(\"opacity\", 1e-6)\r\n          .remove();\r\n\r\n      // Compute the tick format.\r\n      var format = tickFormat || x1.tickFormat(8);\r\n\r\n      // Update box ticks.\r\n      var boxTick = g.selectAll(\"text.box\")\r\n          .data(quartileData);\r\n\r\n      boxTick.enter().append(\"text\")\r\n          .attr(\"class\", \"box\")\r\n          .attr(\"dy\", \".3em\")\r\n          .attr(\"dx\", function(d, i) { return i & 1 ? 6 : -6 })\r\n          .attr(\"x\", function(d, i) { return i & 1 ? width : 0 })\r\n          .attr(\"y\", x0)\r\n          .attr(\"text-anchor\", function(d, i) { return i & 1 ? \"start\" : \"end\"; })\r\n          .text(format)\r\n        .transition()\r\n          .duration(duration)\r\n          .attr(\"y\", x1);\r\n\r\n      boxTick.transition()\r\n          .duration(duration)\r\n          .text(format)\r\n          .attr(\"y\", x1);\r\n\r\n      // Update whisker ticks. These are handled separately from the box\r\n      // ticks because they may or may not exist, and we want don't want\r\n      // to join box ticks pre-transition with whisker ticks post-.\r\n      var whiskerTick = g.selectAll(\"text.whisker\")\r\n          .data(whiskerData || []);\r\n\r\n      whiskerTick.enter().append(\"text\")\r\n          .attr(\"class\", \"whisker\")\r\n          .attr(\"dy\", \".3em\")\r\n          .attr(\"dx\", 6)\r\n          .attr(\"x\", width)\r\n          .attr(\"y\", x0)\r\n          .text(format)\r\n          .style(\"opacity\", 1e-6)\r\n        .transition()\r\n          .duration(duration)\r\n          .attr(\"y\", x1)\r\n          .style(\"opacity\", 1);\r\n\r\n      whiskerTick.transition()\r\n          .duration(duration)\r\n          .text(format)\r\n          .attr(\"y\", x1)\r\n          .style(\"opacity\", 1);\r\n\r\n      whiskerTick.exit().transition()\r\n          .duration(duration)\r\n          .attr(\"y\", x1)\r\n          .style(\"opacity\", 1e-6)\r\n          .remove();\r\n    });\r\n    d3.timer.flush();\r\n  }\r\n\r\n  box.width = function(x) {\r\n    if (!arguments.length) return width;\r\n    width = x;\r\n    return box;\r\n  };\r\n\r\n  box.height = function(x) {\r\n    if (!arguments.length) return height;\r\n    height = x;\r\n    return box;\r\n  };\r\n\r\n  box.tickFormat = function(x) {\r\n    if (!arguments.length) return tickFormat;\r\n    tickFormat = x;\r\n    return box;\r\n  };\r\n\r\n  box.duration = function(x) {\r\n    if (!arguments.length) return duration;\r\n    duration = x;\r\n    return box;\r\n  };\r\n\r\n  box.domain = function(x) {\r\n    if (!arguments.length) return domain;\r\n    domain = x == null ? x : d3.functor(x);\r\n    return box;\r\n  };\r\n\r\n  box.value = function(x) {\r\n    if (!arguments.length) return value;\r\n    value = x;\r\n    return box;\r\n  };\r\n\r\n  box.whiskers = function(x) {\r\n    if (!arguments.length) return whiskers;\r\n    whiskers = x;\r\n    return box;\r\n  };\r\n\r\n  box.quartiles = function(x) {\r\n    if (!arguments.length) return quartiles;\r\n    quartiles = x;\r\n    return box;\r\n  };\r\n\r\n  return box;\r\n};\r\n\r\nfunction boxWhiskers(d) {\r\n  return [0, d.length - 1];\r\n}\r\n\r\nfunction boxQuartiles(d) {\r\n  return [\r\n    d3.quantile(d, .25),\r\n    d3.quantile(d, .5),\r\n    d3.quantile(d, .75)\r\n  ];\r\n}\r\n\r\n})();\r\n\r\n\r\nvar margin = {top: 10, right: 50, bottom: 20, left: 50},\r\n    width = 120 - margin.left - margin.right,\r\n    height = 500 - margin.top - margin.bottom;\r\n\r\nvar min = Infinity,\r\n    max = -Infinity;\r\n\r\nvar chart = d3.box()\r\n    .whiskers(iqr(1.5))\r\n    .width(width)\r\n    .height(height);\r\n\r\nd3.csv(\"$$this$$\", function(error, csv) {\r\n  if (error) throw error;\r\n\r\n  var data = [];\r\n\r\n  csv.forEach(function(x) {\r\n    var e = Math.floor(x.Expt - 1),\r\n        r = Math.floor(x.Run - 1),\r\n        s = Math.floor(x.Speed),\r\n        d = data[e];\r\n    if (!d) d = data[e] = [s];\r\n    else d.push(s);\r\n    if (s > max) max = s;\r\n    if (s < min) min = s;\r\n  });\r\n\r\n  chart.domain([min, max]);\r\n\r\n  var svg = d3.select(\"#chart\").selectAll(\"svg\")\r\n      .data(data)\r\n    .enter().append(\"svg\")\r\n      .attr(\"class\", \"box\")\r\n      .attr(\"width\", width + margin.left + margin.right)\r\n      .attr(\"height\", height + margin.bottom + margin.top)\r\n    .append(\"g\")\r\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\r\n      .call(chart);\r\n\r\n  setInterval(function() {\r\n    svg.datum(randomize).call(chart.duration(1000));\r\n  }, 2000);\r\n});\r\n\r\nfunction randomize(d) {\r\n  if (!d.randomizer) d.randomizer = randomizer(d);\r\n  return d.map(d.randomizer);\r\n}\r\n\r\nfunction randomizer(d) {\r\n  var k = d3.max(d) * .02;\r\n  return function(d) {\r\n    return Math.max(min, Math.min(max, d + k * (Math.random() - .5)));\r\n  };\r\n}\r\n\r\n// Returns a function to compute the interquartile range.\r\nfunction iqr(k) {\r\n  return function(d, i) {\r\n    var q1 = d.quartiles[0],\r\n        q3 = d.quartiles[2],\r\n        iqr = (q3 - q1) * k,\r\n        i = -1,\r\n        j = d.length;\r\n    while (d[++i] < q1 - iqr);\r\n    while (d[--j] > q3 + iqr);\r\n    return [i, j];\r\n  };\r\n}"
 ,"plugins": [] },
{"@rid":"33:7", "@class":"D3Script"
, "name":"Tree Map sample"
 ,"dataScript":"{\r\n \"name\": \"flare\",\r\n \"children\": [\r\n  {\r\n   \"name\": \"analytics\",\r\n   \"children\": [\r\n    {\r\n     \"name\": \"cluster\",\r\n     \"children\": [\r\n      {\"name\": \"AgglomerativeCluster\", \"size\": 3938},\r\n      {\"name\": \"CommunityStructure\", \"size\": 3812},\r\n      {\"name\": \"HierarchicalCluster\", \"size\": 6714},\r\n      {\"name\": \"MergeEdge\", \"size\": 743}\r\n     ]\r\n    },\r\n    {\r\n     \"name\": \"graph\",\r\n     \"children\": [\r\n      {\"name\": \"BetweennessCentrality\", \"size\": 3534},\r\n      {\"name\": \"LinkDistance\", \"size\": 5731},\r\n      {\"name\": \"MaxFlowMinCut\", \"size\": 7840},\r\n      {\"name\": \"ShortestPaths\", \"size\": 5914},\r\n      {\"name\": \"SpanningTree\", \"size\": 3416}\r\n     ]\r\n    },\r\n    {\r\n     \"name\": \"optimization\",\r\n     \"children\": [\r\n      {\"name\": \"AspectRatioBanker\", \"size\": 7074}\r\n     ]\r\n    }\r\n   ]\r\n  },\r\n  {\r\n   \"name\": \"animate\",\r\n   \"children\": [\r\n    {\"name\": \"Easing\", \"size\": 17010},\r\n    {\"name\": \"FunctionSequence\", \"size\": 5842},\r\n    {\r\n     \"name\": \"interpolate\",\r\n     \"children\": [\r\n      {\"name\": \"ArrayInterpolator\", \"size\": 1983},\r\n      {\"name\": \"ColorInterpolator\", \"size\": 2047},\r\n      {\"name\": \"DateInterpolator\", \"size\": 1375},\r\n      {\"name\": \"Interpolator\", \"size\": 8746},\r\n      {\"name\": \"MatrixInterpolator\", \"size\": 2202},\r\n      {\"name\": \"NumberInterpolator\", \"size\": 1382},\r\n      {\"name\": \"ObjectInterpolator\", \"size\": 1629},\r\n      {\"name\": \"PointInterpolator\", \"size\": 1675},\r\n      {\"name\": \"RectangleInterpolator\", \"size\": 2042}\r\n     ]\r\n    },\r\n    {\"name\": \"ISchedulable\", \"size\": 1041},\r\n    {\"name\": \"Parallel\", \"size\": 5176},\r\n    {\"name\": \"Pause\", \"size\": 449},\r\n    {\"name\": \"Scheduler\", \"size\": 5593},\r\n    {\"name\": \"Sequence\", \"size\": 5534},\r\n    {\"name\": \"Transition\", \"size\": 9201},\r\n    {\"name\": \"Transitioner\", \"size\": 19975},\r\n    {\"name\": \"TransitionEvent\", \"size\": 1116},\r\n    {\"name\": \"Tween\", \"size\": 6006}\r\n   ]\r\n  },\r\n  {\r\n   \"name\": \"data\",\r\n   \"children\": [\r\n    {\r\n     \"name\": \"converters\",\r\n     \"children\": [\r\n      {\"name\": \"Converters\", \"size\": 721},\r\n      {\"name\": \"DelimitedTextConverter\", \"size\": 4294},\r\n      {\"name\": \"GraphMLConverter\", \"size\": 9800},\r\n      {\"name\": \"IDataConverter\", \"size\": 1314},\r\n      {\"name\": \"JSONConverter\", \"size\": 2220}\r\n     ]\r\n    },\r\n    {\"name\": \"DataField\", \"size\": 1759},\r\n    {\"name\": \"DataSchema\", \"size\": 2165},\r\n    {\"name\": \"DataSet\", \"size\": 586},\r\n    {\"name\": \"DataSource\", \"size\": 3331},\r\n    {\"name\": \"DataTable\", \"size\": 772},\r\n    {\"name\": \"DataUtil\", \"size\": 3322}\r\n   ]\r\n  },\r\n  {\r\n   \"name\": \"display\",\r\n   \"children\": [\r\n    {\"name\": \"DirtySprite\", \"size\": 8833},\r\n    {\"name\": \"LineSprite\", \"size\": 1732},\r\n    {\"name\": \"RectSprite\", \"size\": 3623},\r\n    {\"name\": \"TextSprite\", \"size\": 10066}\r\n   ]\r\n  },\r\n  {\r\n   \"name\": \"flex\",\r\n   \"children\": [\r\n    {\"name\": \"FlareVis\", \"size\": 4116}\r\n   ]\r\n  },\r\n  {\r\n   \"name\": \"physics\",\r\n   \"children\": [\r\n    {\"name\": \"DragForce\", \"size\": 1082},\r\n    {\"name\": \"GravityForce\", \"size\": 1336},\r\n    {\"name\": \"IForce\", \"size\": 319},\r\n    {\"name\": \"NBodyForce\", \"size\": 10498},\r\n    {\"name\": \"Particle\", \"size\": 2822},\r\n    {\"name\": \"Simulation\", \"size\": 9983},\r\n    {\"name\": \"Spring\", \"size\": 2213},\r\n    {\"name\": \"SpringForce\", \"size\": 1681}\r\n   ]\r\n  },\r\n  {\r\n   \"name\": \"query\",\r\n   \"children\": [\r\n    {\"name\": \"AggregateExpression\", \"size\": 1616},\r\n    {\"name\": \"And\", \"size\": 1027},\r\n    {\"name\": \"Arithmetic\", \"size\": 3891},\r\n    {\"name\": \"Average\", \"size\": 891},\r\n    {\"name\": \"BinaryExpression\", \"size\": 2893},\r\n    {\"name\": \"Comparison\", \"size\": 5103},\r\n    {\"name\": \"CompositeExpression\", \"size\": 3677},\r\n    {\"name\": \"Count\", \"size\": 781},\r\n    {\"name\": \"DateUtil\", \"size\": 4141},\r\n    {\"name\": \"Distinct\", \"size\": 933},\r\n    {\"name\": \"Expression\", \"size\": 5130},\r\n    {\"name\": \"ExpressionIterator\", \"size\": 3617},\r\n    {\"name\": \"Fn\", \"size\": 3240},\r\n    {\"name\": \"If\", \"size\": 2732},\r\n    {\"name\": \"IsA\", \"size\": 2039},\r\n    {\"name\": \"Literal\", \"size\": 1214},\r\n    {\"name\": \"Match\", \"size\": 3748},\r\n    {\"name\": \"Maximum\", \"size\": 843},\r\n    {\r\n     \"name\": \"methods\",\r\n     \"children\": [\r\n      {\"name\": \"add\", \"size\": 593},\r\n      {\"name\": \"and\", \"size\": 330},\r\n      {\"name\": \"average\", \"size\": 287},\r\n      {\"name\": \"count\", \"size\": 277},\r\n      {\"name\": \"distinct\", \"size\": 292},\r\n      {\"name\": \"div\", \"size\": 595},\r\n      {\"name\": \"eq\", \"size\": 594},\r\n      {\"name\": \"fn\", \"size\": 460},\r\n      {\"name\": \"gt\", \"size\": 603},\r\n      {\"name\": \"gte\", \"size\": 625},\r\n      {\"name\": \"iff\", \"size\": 748},\r\n      {\"name\": \"isa\", \"size\": 461},\r\n      {\"name\": \"lt\", \"size\": 597},\r\n      {\"name\": \"lte\", \"size\": 619},\r\n      {\"name\": \"max\", \"size\": 283},\r\n      {\"name\": \"min\", \"size\": 283},\r\n      {\"name\": \"mod\", \"size\": 591},\r\n      {\"name\": \"mul\", \"size\": 603},\r\n      {\"name\": \"neq\", \"size\": 599},\r\n      {\"name\": \"not\", \"size\": 386},\r\n      {\"name\": \"or\", \"size\": 323},\r\n      {\"name\": \"orderby\", \"size\": 307},\r\n      {\"name\": \"range\", \"size\": 772},\r\n      {\"name\": \"select\", \"size\": 296},\r\n      {\"name\": \"stddev\", \"size\": 363},\r\n      {\"name\": \"sub\", \"size\": 600},\r\n      {\"name\": \"sum\", \"size\": 280},\r\n      {\"name\": \"update\", \"size\": 307},\r\n      {\"name\": \"variance\", \"size\": 335},\r\n      {\"name\": \"where\", \"size\": 299},\r\n      {\"name\": \"xor\", \"size\": 354},\r\n      {\"name\": \"_\", \"size\": 264}\r\n     ]\r\n    },\r\n    {\"name\": \"Minimum\", \"size\": 843},\r\n    {\"name\": \"Not\", \"size\": 1554},\r\n    {\"name\": \"Or\", \"size\": 970},\r\n    {\"name\": \"Query\", \"size\": 13896},\r\n    {\"name\": \"Range\", \"size\": 1594},\r\n    {\"name\": \"StringUtil\", \"size\": 4130},\r\n    {\"name\": \"Sum\", \"size\": 791},\r\n    {\"name\": \"Variable\", \"size\": 1124},\r\n    {\"name\": \"Variance\", \"size\": 1876},\r\n    {\"name\": \"Xor\", \"size\": 1101}\r\n   ]\r\n  },\r\n  {\r\n   \"name\": \"scale\",\r\n   \"children\": [\r\n    {\"name\": \"IScaleMap\", \"size\": 2105},\r\n    {\"name\": \"LinearScale\", \"size\": 1316},\r\n    {\"name\": \"LogScale\", \"size\": 3151},\r\n    {\"name\": \"OrdinalScale\", \"size\": 3770},\r\n    {\"name\": \"QuantileScale\", \"size\": 2435},\r\n    {\"name\": \"QuantitativeScale\", \"size\": 4839},\r\n    {\"name\": \"RootScale\", \"size\": 1756},\r\n    {\"name\": \"Scale\", \"size\": 4268},\r\n    {\"name\": \"ScaleType\", \"size\": 1821},\r\n    {\"name\": \"TimeScale\", \"size\": 5833}\r\n   ]\r\n  },\r\n  {\r\n   \"name\": \"util\",\r\n   \"children\": [\r\n    {\"name\": \"Arrays\", \"size\": 8258},\r\n    {\"name\": \"Colors\", \"size\": 10001},\r\n    {\"name\": \"Dates\", \"size\": 8217},\r\n    {\"name\": \"Displays\", \"size\": 12555},\r\n    {\"name\": \"Filter\", \"size\": 2324},\r\n    {\"name\": \"Geometry\", \"size\": 10993},\r\n    {\r\n     \"name\": \"heap\",\r\n     \"children\": [\r\n      {\"name\": \"FibonacciHeap\", \"size\": 9354},\r\n      {\"name\": \"HeapNode\", \"size\": 1233}\r\n     ]\r\n    },\r\n    {\"name\": \"IEvaluable\", \"size\": 335},\r\n    {\"name\": \"IPredicate\", \"size\": 383},\r\n    {\"name\": \"IValueProxy\", \"size\": 874},\r\n    {\r\n     \"name\": \"math\",\r\n     \"children\": [\r\n      {\"name\": \"DenseMatrix\", \"size\": 3165},\r\n      {\"name\": \"IMatrix\", \"size\": 2815},\r\n      {\"name\": \"SparseMatrix\", \"size\": 3366}\r\n     ]\r\n    },\r\n    {\"name\": \"Maths\", \"size\": 17705},\r\n    {\"name\": \"Orientation\", \"size\": 1486},\r\n    {\r\n     \"name\": \"palette\",\r\n     \"children\": [\r\n      {\"name\": \"ColorPalette\", \"size\": 6367},\r\n      {\"name\": \"Palette\", \"size\": 1229},\r\n      {\"name\": \"ShapePalette\", \"size\": 2059},\r\n      {\"name\": \"SizePalette\", \"size\": 2291}\r\n     ]\r\n    },\r\n    {\"name\": \"Property\", \"size\": 5559},\r\n    {\"name\": \"Shapes\", \"size\": 19118},\r\n    {\"name\": \"Sort\", \"size\": 6887},\r\n    {\"name\": \"Stats\", \"size\": 6557},\r\n    {\"name\": \"Strings\", \"size\": 22026}\r\n   ]\r\n  },\r\n  {\r\n   \"name\": \"vis\",\r\n   \"children\": [\r\n    {\r\n     \"name\": \"axis\",\r\n     \"children\": [\r\n      {\"name\": \"Axes\", \"size\": 1302},\r\n      {\"name\": \"Axis\", \"size\": 24593},\r\n      {\"name\": \"AxisGridLine\", \"size\": 652},\r\n      {\"name\": \"AxisLabel\", \"size\": 636},\r\n      {\"name\": \"CartesianAxes\", \"size\": 6703}\r\n     ]\r\n    },\r\n    {\r\n     \"name\": \"controls\",\r\n     \"children\": [\r\n      {\"name\": \"AnchorControl\", \"size\": 2138},\r\n      {\"name\": \"ClickControl\", \"size\": 3824},\r\n      {\"name\": \"Control\", \"size\": 1353},\r\n      {\"name\": \"ControlList\", \"size\": 4665},\r\n      {\"name\": \"DragControl\", \"size\": 2649},\r\n      {\"name\": \"ExpandControl\", \"size\": 2832},\r\n      {\"name\": \"HoverControl\", \"size\": 4896},\r\n      {\"name\": \"IControl\", \"size\": 763},\r\n      {\"name\": \"PanZoomControl\", \"size\": 5222},\r\n      {\"name\": \"SelectionControl\", \"size\": 7862},\r\n      {\"name\": \"TooltipControl\", \"size\": 8435}\r\n     ]\r\n    },\r\n    {\r\n     \"name\": \"data\",\r\n     \"children\": [\r\n      {\"name\": \"Data\", \"size\": 20544},\r\n      {\"name\": \"DataList\", \"size\": 19788},\r\n      {\"name\": \"DataSprite\", \"size\": 10349},\r\n      {\"name\": \"EdgeSprite\", \"size\": 3301},\r\n      {\"name\": \"NodeSprite\", \"size\": 19382},\r\n      {\r\n       \"name\": \"render\",\r\n       \"children\": [\r\n        {\"name\": \"ArrowType\", \"size\": 698},\r\n        {\"name\": \"EdgeRenderer\", \"size\": 5569},\r\n        {\"name\": \"IRenderer\", \"size\": 353},\r\n        {\"name\": \"ShapeRenderer\", \"size\": 2247}\r\n       ]\r\n      },\r\n      {\"name\": \"ScaleBinding\", \"size\": 11275},\r\n      {\"name\": \"Tree\", \"size\": 7147},\r\n      {\"name\": \"TreeBuilder\", \"size\": 9930}\r\n     ]\r\n    },\r\n    {\r\n     \"name\": \"events\",\r\n     \"children\": [\r\n      {\"name\": \"DataEvent\", \"size\": 2313},\r\n      {\"name\": \"SelectionEvent\", \"size\": 1880},\r\n      {\"name\": \"TooltipEvent\", \"size\": 1701},\r\n      {\"name\": \"VisualizationEvent\", \"size\": 1117}\r\n     ]\r\n    },\r\n    {\r\n     \"name\": \"legend\",\r\n     \"children\": [\r\n      {\"name\": \"Legend\", \"size\": 20859},\r\n      {\"name\": \"LegendItem\", \"size\": 4614},\r\n      {\"name\": \"LegendRange\", \"size\": 10530}\r\n     ]\r\n    },\r\n    {\r\n     \"name\": \"operator\",\r\n     \"children\": [\r\n      {\r\n       \"name\": \"distortion\",\r\n       \"children\": [\r\n        {\"name\": \"BifocalDistortion\", \"size\": 4461},\r\n        {\"name\": \"Distortion\", \"size\": 6314},\r\n        {\"name\": \"FisheyeDistortion\", \"size\": 3444}\r\n       ]\r\n      },\r\n      {\r\n       \"name\": \"encoder\",\r\n       \"children\": [\r\n        {\"name\": \"ColorEncoder\", \"size\": 3179},\r\n        {\"name\": \"Encoder\", \"size\": 4060},\r\n        {\"name\": \"PropertyEncoder\", \"size\": 4138},\r\n        {\"name\": \"ShapeEncoder\", \"size\": 1690},\r\n        {\"name\": \"SizeEncoder\", \"size\": 1830}\r\n       ]\r\n      },\r\n      {\r\n       \"name\": \"filter\",\r\n       \"children\": [\r\n        {\"name\": \"FisheyeTreeFilter\", \"size\": 5219},\r\n        {\"name\": \"GraphDistanceFilter\", \"size\": 3165},\r\n        {\"name\": \"VisibilityFilter\", \"size\": 3509}\r\n       ]\r\n      },\r\n      {\"name\": \"IOperator\", \"size\": 1286},\r\n      {\r\n       \"name\": \"label\",\r\n       \"children\": [\r\n        {\"name\": \"Labeler\", \"size\": 9956},\r\n        {\"name\": \"RadialLabeler\", \"size\": 3899},\r\n        {\"name\": \"StackedAreaLabeler\", \"size\": 3202}\r\n       ]\r\n      },\r\n      {\r\n       \"name\": \"layout\",\r\n       \"children\": [\r\n        {\"name\": \"AxisLayout\", \"size\": 6725},\r\n        {\"name\": \"BundledEdgeRouter\", \"size\": 3727},\r\n        {\"name\": \"CircleLayout\", \"size\": 9317},\r\n        {\"name\": \"CirclePackingLayout\", \"size\": 12003},\r\n        {\"name\": \"DendrogramLayout\", \"size\": 4853},\r\n        {\"name\": \"ForceDirectedLayout\", \"size\": 8411},\r\n        {\"name\": \"IcicleTreeLayout\", \"size\": 4864},\r\n        {\"name\": \"IndentedTreeLayout\", \"size\": 3174},\r\n        {\"name\": \"Layout\", \"size\": 7881},\r\n        {\"name\": \"NodeLinkTreeLayout\", \"size\": 12870},\r\n        {\"name\": \"PieLayout\", \"size\": 2728},\r\n        {\"name\": \"RadialTreeLayout\", \"size\": 12348},\r\n        {\"name\": \"RandomLayout\", \"size\": 870},\r\n        {\"name\": \"StackedAreaLayout\", \"size\": 9121},\r\n        {\"name\": \"TreeMapLayout\", \"size\": 9191}\r\n       ]\r\n      },\r\n      {\"name\": \"Operator\", \"size\": 2490},\r\n      {\"name\": \"OperatorList\", \"size\": 5248},\r\n      {\"name\": \"OperatorSequence\", \"size\": 4190},\r\n      {\"name\": \"OperatorSwitch\", \"size\": 2581},\r\n      {\"name\": \"SortOperator\", \"size\": 2023}\r\n     ]\r\n    },\r\n    {\"name\": \"Visualization\", \"size\": 16540}\r\n   ]\r\n  }\r\n ]\r\n}"
 ,"description":"This is a simple tree map from https://bl.ocks.org/mbostock/4063582"
 ,"style":"body {\r\n  font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\r\n  margin: auto;\r\n  position: relative;\r\n  width: 960px;\r\n}\r\n\r\nform {\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 10px;\r\n}\r\n\r\n.node {\r\n  border: solid 1px white;\r\n  font: 10px sans-serif;\r\n  line-height: 12px;\r\n  overflow: hidden;\r\n  position: absolute;\r\n  text-indent: 2px;\r\n}"
 ,"script":"var margin = {top: 40, right: 10, bottom: 10, left: 10},\r\n    width = 960 - margin.left - margin.right,\r\n    height = 500 - margin.top - margin.bottom;\r\n\r\nvar color = d3.scale.category20c();\r\n\r\nvar treemap = d3.layout.treemap()\r\n    .size([width, height])\r\n    .sticky(true)\r\n    .value(function(d) { return d.size; });\r\n\r\nvar div = d3.select(\"#service\").append(\"div\")\r\n    .style(\"position\", \"relative\")\r\n    .style(\"width\", (width + margin.left + margin.right) + \"px\")\r\n    .style(\"height\", (height + margin.top + margin.bottom) + \"px\")\r\n    .style(\"left\", margin.left + \"px\")\r\n    .style(\"top\", margin.top + \"px\");\r\n\r\nd3.json(\"$$this$$\", function(error, root) {\r\n  if (error) throw error;\r\n\r\n  var node = div.datum(root).selectAll(\".node\")\r\n      .data(treemap.nodes)\r\n    .enter().append(\"div\")\r\n      .attr(\"class\", \"node\")\r\n      .call(position)\r\n      .style(\"background\", function(d) { return d.children ? color(d.name) : null; })\r\n      .text(function(d) { return d.children ? null : d.name; });\r\n\r\n  d3.selectAll(\"input\").on(\"change\", function change() {\r\n    var value = this.value === \"count\"\r\n        ? function() { return 1; }\r\n        : function(d) { return d.size; };\r\n\r\n    node\r\n        .data(treemap.value(value).nodes)\r\n      .transition()\r\n        .duration(1500)\r\n        .call(position);\r\n  });\r\n});\r\n\r\nfunction position() {\r\n  this.style(\"left\", function(d) { return d.x + \"px\"; })\r\n      .style(\"top\", function(d) { return d.y + \"px\"; })\r\n      .style(\"width\", function(d) { return Math.max(0, d.dx - 1) + \"px\"; })\r\n      .style(\"height\", function(d) { return Math.max(0, d.dy - 1) + \"px\"; });\r\n}"
 ,"plugins": [] },
{"@rid":"33:8", "@class":"D3Script"
, "name":"Hierarchical Edge Bundling"
 ,"dataScript":"[ \r\n{\"name\":\"flare.analytics.cluster.AgglomerativeCluster\",\"size\":3938,\"imports\":[\"flare.animate.Transitioner\",\"flare.vis.data.DataList\",\"flare.util.math.IMatrix\",\"flare.analytics.cluster.MergeEdge\",\"flare.analytics.cluster.HierarchicalCluster\",\"flare.vis.data.Data\"]},\r\n{\"name\":\"flare.analytics.cluster.CommunityStructure\",\"size\":3812,\"imports\":[\"flare.analytics.cluster.HierarchicalCluster\",\"flare.animate.Transitioner\",\"flare.vis.data.DataList\",\"flare.analytics.cluster.MergeEdge\",\"flare.util.math.IMatrix\"]},\r\n{\"name\":\"flare.analytics.cluster.HierarchicalCluster\",\"size\":6714,\"imports\":[\"flare.vis.data.EdgeSprite\",\"flare.vis.data.NodeSprite\",\"flare.vis.data.DataList\",\"flare.vis.data.Tree\",\"flare.util.Arrays\",\"flare.analytics.cluster.MergeEdge\",\"flare.util.Sort\",\"flare.vis.operator.Operator\",\"flare.util.Property\",\"flare.vis.data.Data\"]},\r\n{\"name\":\"flare.analytics.cluster.MergeEdge\",\"size\":743,\"imports\":[]},\r\n{\"name\":\"flare.analytics.graph.BetweennessCentrality\",\"size\":3534,\"imports\":[\"flare.animate.Transitioner\",\"flare.vis.data.NodeSprite\",\"flare.vis.data.DataList\",\"flare.util.Arrays\",\"flare.vis.data.Data\",\"flare.util.Property\",\"flare.vis.operator.Operator\"]},\r\n{\"name\":\"flare.analytics.graph.LinkDistance\",\"size\":5731,\"imports\":[\"flare.animate.Transitioner\",\"flare.vis.data.NodeSprite\",\"flare.vis.data.EdgeSprite\",\"flare.analytics.graph.ShortestPaths\",\"flare.vis.data.Data\",\"flare.util.Property\",\"flare.vis.operator.Operator\"]},\r\n{\"name\":\"flare.analytics.graph.MaxFlowMinCut\",\"size\":7840,\"imports\":[\"flare.animate.Transitioner\",\"flare.vis.data.NodeSprite\",\"flare.vis.data.EdgeSprite\",\"flare.vis.data.Data\",\"flare.util.Property\",\"flare.vis.operator.Operator\"]},\r\n{\"name\":\"flare.analytics.graph.ShortestPaths\",\"size\":5914,\"imports\":[\"flare.vis.data.EdgeSprite\",\"flare.vis.data.NodeSprite\",\"flare.animate.Transitioner\",\"flare.vis.operator.Operator\",\"flare.util.heap.HeapNode\",\"flare.util.heap.FibonacciHeap\",\"flare.util.Property\",\"flare.vis.data.Data\"]},\r\n{\"name\":\"flare.analytics.graph.SpanningTree\",\"size\":3416,\"imports\":[\"flare.animate.Transitioner\",\"flare.vis.data.NodeSprite\",\"flare.vis.operator.IOperator\",\"flare.vis.Visualization\",\"flare.vis.data.TreeBuilder\",\"flare.vis.operator.Operator\"]},\r\n{\"name\":\"flare.analytics.optimization.AspectRatioBanker\",\"size\":7074,\"imports\":[\"flare.animate.Transitioner\",\"flare.util.Arrays\",\"flare.vis.data.DataSprite\",\"flare.scale.Scale\",\"flare.vis.axis.CartesianAxes\",\"flare.vis.Visualization\",\"flare.util.Property\",\"flare.vis.operator.Operator\"]},\r\n{\"name\":\"flare.animate.Easing\",\"size\":17010,\"imports\":[\"flare.animate.Transition\"]},\r\n{\"name\":\"flare.animate.FunctionSequence\",\"size\":5842,\"imports\":[\"flare.util.Maths\",\"flare.animate.Transition\",\"flare.util.Arrays\",\"flare.animate.Sequence\",\"flare.animate.Transitioner\"]},\r\n{\"name\":\"flare.animate.interpolate.ArrayInterpolator\",\"size\":1983,\"imports\":[\"flare.util.Arrays\",\"flare.animate.interpolate.Interpolator\"]},\r\n{\"name\":\"flare.animate.interpolate.ColorInterpolator\",\"size\":2047,\"imports\":[\"flare.animate.interpolate.Interpolator\"]},\r\n{\"name\":\"flare.animate.interpolate.DateInterpolator\",\"size\":1375,\"imports\":[\"flare.animate.interpolate.Interpolator\"]},\r\n{\"name\":\"flare.animate.interpolate.Interpolator\",\"size\":8746,\"imports\":[\"flare.animate.interpolate.NumberInterpolator\",\"flare.animate.interpolate.ColorInterpolator\",\"flare.animate.interpolate.PointInterpolator\",\"flare.animate.interpolate.ObjectInterpolator\",\"flare.animate.interpolate.MatrixInterpolator\",\"flare.animate.interpolate.RectangleInterpolator\",\"flare.animate.interpolate.DateInterpolator\",\"flare.util.Property\",\"flare.animate.interpolate.ArrayInterpolator\"]},\r\n{\"name\":\"flare.animate.interpolate.MatrixInterpolator\",\"size\":2202,\"imports\":[\"flare.animate.interpolate.Interpolator\"]},\r\n{\"name\":\"flare.animate.interpolate.NumberInterpolator\",\"size\":1382,\"imports\":[\"flare.animate.interpolate.Interpolator\"]},\r\n{\"name\":\"flare.animate.interpolate.ObjectInterpolator\",\"size\":1629,\"imports\":[\"flare.animate.interpolate.Interpolator\"]},\r\n{\"name\":\"flare.animate.interpolate.PointInterpolator\",\"size\":1675,\"imports\":[\"flare.animate.interpolate.Interpolator\"]},\r\n{\"name\":\"flare.animate.interpolate.RectangleInterpolator\",\"size\":2042,\"imports\":[\"flare.animate.interpolate.Interpolator\"]},\r\n{\"name\":\"flare.animate.ISchedulable\",\"size\":1041,\"imports\":[\"flare.animate.Scheduler\"]},\r\n{\"name\":\"flare.animate.Parallel\",\"size\":5176,\"imports\":[\"flare.animate.Easing\",\"flare.animate.Transition\",\"flare.util.Arrays\"]},\r\n{\"name\":\"flare.animate.Pause\",\"size\":449,\"imports\":[\"flare.animate.Transition\"]},\r\n{\"name\":\"flare.animate.Scheduler\",\"size\":5593,\"imports\":[\"flare.animate.ISchedulable\",\"flare.animate.Pause\",\"flare.animate.Transition\"]},\r\n{\"name\":\"flare.animate.Sequence\",\"size\":5534,\"imports\":[\"flare.animate.Easing\",\"flare.util.Maths\",\"flare.animate.Transition\",\"flare.util.Arrays\"]},\r\n{\"name\":\"flare.animate.Transition\",\"size\":9201,\"imports\":[\"flare.animate.Transitioner\",\"flare.animate.TransitionEvent\",\"flare.animate.Scheduler\",\"flare.animate.Pause\",\"flare.animate.Parallel\",\"flare.animate.Easing\",\"flare.animate.Sequence\",\"flare.animate.ISchedulable\",\"flare.util.Maths\",\"flare.animate.Tween\"]},\r\n{\"name\":\"flare.animate.Transitioner\",\"size\":19975,\"imports\":[\"flare.util.IValueProxy\",\"flare.animate.Parallel\",\"flare.animate.Easing\",\"flare.animate.Sequence\",\"flare.animate.Transition\",\"flare.animate.Tween\",\"flare.util.Property\"]},\r\n{\"name\":\"flare.animate.TransitionEvent\",\"size\":1116,\"imports\":[\"flare.animate.Transition\"]},\r\n{\"name\":\"flare.animate.Tween\",\"size\":6006,\"imports\":[\"flare.animate.Transitioner\",\"flare.animate.Transition\",\"flare.animate.interpolate.Interpolator\",\"flare.util.Property\"]},\r\n{\"name\":\"flare.data.converters.Converters\",\"size\":721,\"imports\":[\"flare.data.converters.IDataConverter\",\"flare.data.converters.GraphMLConverter\",\"flare.data.converters.JSONConverter\",\"flare.data.converters.DelimitedTextConverter\"]},\r\n{\"name\":\"flare.data.converters.DelimitedTextConverter\",\"size\":4294,\"imports\":[\"flare.data.DataSet\",\"flare.data.DataUtil\",\"flare.data.DataTable\",\"flare.data.converters.IDataConverter\",\"flare.data.DataSchema\",\"flare.data.DataField\"]},\r\n{\"name\":\"flare.data.converters.GraphMLConverter\",\"size\":9800,\"imports\":[\"flare.data.DataSet\",\"flare.data.DataUtil\",\"flare.data.DataTable\",\"flare.data.converters.IDataConverter\",\"flare.data.DataSchema\",\"flare.data.DataField\"]},\r\n{\"name\":\"flare.data.converters.IDataConverter\",\"size\":1314,\"imports\":[\"flare.data.DataSet\",\"flare.data.DataSchema\"]},\r\n{\"name\":\"flare.data.converters.JSONConverter\",\"size\":2220,\"imports\":[\"flare.data.DataSet\",\"flare.data.DataUtil\",\"flare.data.DataTable\",\"flare.data.converters.IDataConverter\",\"flare.data.DataSchema\",\"flare.data.DataField\",\"flare.util.Property\"]},\r\n{\"name\":\"flare.data.DataField\",\"size\":1759,\"imports\":[\"flare.data.DataUtil\"]},\r\n{\"name\":\"flare.data.DataSchema\",\"size\":2165,\"imports\":[\"flare.data.DataField\",\"flare.util.Arrays\"]},\r\n{\"name\":\"flare.data.DataSet\",\"size\":586,\"imports\":[\"flare.data.DataTable\"]},\r\n{\"name\":\"flare.data.DataSource\",\"size\":3331,\"imports\":[\"flare.data.converters.IDataConverter\",\"flare.data.converters.Converters\",\"flare.data.DataSchema\"]},\r\n{\"name\":\"flare.data.DataTable\",\"size\":772,\"imports\":[\"flare.data.DataSchema\"]},\r\n{\"name\":\"flare.data.DataUtil\",\"size\":3322,\"imports\":[\"flare.data.DataField\",\"flare.data.DataSchema\"]},\r\n{\"name\":\"flare.display.DirtySprite\",\"size\":8833,\"imports\":[]},\r\n{\"name\":\"flare.display.LineSprite\",\"size\":1732,\"imports\":[\"flare.display.DirtySprite\"]},\r\n{\"name\":\"flare.display.RectSprite\",\"size\":3623,\"imports\":[\"flare.util.Colors\",\"flare.display.DirtySprite\"]},\r\n{\"name\":\"flare.display.TextSprite\",\"size\":10066,\"imports\":[\"flare.display.DirtySprite\"]},\r\n{\"name\":\"flare.flex.FlareVis\",\"size\":4116,\"imports\":[\"flare.display.DirtySprite\",\"flare.data.DataSet\",\"flare.vis.Visualization\",\"flare.vis.axis.CartesianAxes\",\"flare.vis.axis.Axes\",\"flare.vis.data.Data\"]},\r\n{\"name\":\"flare.physics.DragForce\",\"size\":1082,\"imports\":[\"flare.physics.Simulation\",\"flare.physics.Particle\",\"flare.physics.IForce\"]},\r\n{\"name\":\"flare.physics.GravityForce\",\"size\":1336,\"imports\":[\"flare.physics.Simulation\",\"flare.physics.Particle\",\"flare.physics.IForce\"]},\r\n{\"name\":\"flare.physics.IForce\",\"size\":319,\"imports\":[\"flare.physics.Simulation\"]},\r\n{\"name\":\"flare.physics.NBodyForce\",\"size\":10498,\"imports\":[\"flare.physics.Simulation\",\"flare.physics.Particle\",\"flare.physics.IForce\"]},\r\n{\"name\":\"flare.physics.Particle\",\"size\":2822,\"imports\":[]},\r\n{\"name\":\"flare.physics.Simulation\",\"size\":9983,\"imports\":[\"flare.physics.Particle\",\"flare.physics.NBodyForce\",\"flare.physics.DragForce\",\"flare.physics.GravityForce\",\"flare.physics.Spring\",\"flare.physics.SpringForce\",\"flare.physics.IForce\"]},\r\n{\"name\":\"flare.physics.Spring\",\"size\":2213,\"imports\":[\"flare.physics.Particle\"]},\r\n{\"name\":\"flare.physics.SpringForce\",\"size\":1681,\"imports\":[\"flare.physics.Simulation\",\"flare.physics.Particle\",\"flare.physics.Spring\",\"flare.physics.IForce\"]},\r\n{\"name\":\"flare.query.AggregateExpression\",\"size\":1616,\"imports\":[\"flare.query.Expression\"]},\r\n{\"name\":\"flare.query.And\",\"size\":1027,\"imports\":[\"flare.query.CompositeExpression\",\"flare.query.Expression\"]},\r\n{\"name\":\"flare.query.Arithmetic\",\"size\":3891,\"imports\":[\"flare.query.BinaryExpression\",\"flare.query.Expression\"]},\r\n{\"name\":\"flare.query.Average\",\"size\":891,\"imports\":[\"flare.query.Expression\",\"flare.query.AggregateExpression\"]},\r\n{\"name\":\"flare.query.BinaryExpression\",\"size\":2893,\"imports\":[\"flare.query.Expression\"]},\r\n{\"name\":\"flare.query.Comparison\",\"size\":5103,\"imports\":[\"flare.query.Not\",\"flare.query.BinaryExpression\",\"flare.query.Expression\",\"flare.query.Or\"]},\r\n{\"name\":\"flare.query.CompositeExpression\",\"size\":3677,\"imports\":[\"flare.query.Expression\",\"flare.query.If\"]},\r\n{\"name\":\"flare.query.Count\",\"size\":781,\"imports\":[\"flare.query.Expression\",\"flare.query.AggregateExpression\"]},\r\n{\"name\":\"flare.query.DateUtil\",\"size\":4141,\"imports\":[\"flare.query.Fn\"]},\r\n{\"name\":\"flare.query.Distinct\",\"size\":933,\"imports\":[\"flare.query.Expression\",\"flare.query.AggregateExpression\"]},\r\n{\"name\":\"flare.query.Expression\",\"size\":5130,\"imports\":[\"flare.query.Variable\",\"flare.query.IsA\",\"flare.query.ExpressionIterator\",\"flare.util.IPredicate\",\"flare.query.Literal\",\"flare.util.IEvaluable\",\"flare.query.If\"]},\r\n{\"name\":\"flare.query.ExpressionIterator\",\"size\":3617,\"imports\":[\"flare.query.Expression\"]},\r\n{\"name\":\"flare.query.Fn\",\"size\":3240,\"imports\":[\"flare.query.DateUtil\",\"flare.query.CompositeExpression\",\"flare.query.Expression\",\"flare.query.StringUtil\"]},\r\n{\"name\":\"flare.query.If\",\"size\":2732,\"imports\":[\"flare.query.Expression\"]},\r\n{\"name\":\"flare.query.IsA\",\"size\":2039,\"imports\":[\"flare.query.Expression\",\"flare.query.If\"]},\r\n{\"name\":\"flare.query.Literal\",\"size\":1214,\"imports\":[\"flare.query.Expression\"]},\r\n{\"name\":\"flare.query.Match\",\"size\":3748,\"imports\":[\"flare.query.BinaryExpression\",\"flare.query.Expression\",\"flare.query.StringUtil\"]},\r\n{\"name\":\"flare.query.Maximum\",\"size\":843,\"imports\":[\"flare.query.Expression\",\"flare.query.AggregateExpression\"]},\r\n{\"name\":\"flare.query.methods.add\",\"size\":593,\"imports\":[\"flare.query.methods.or\",\"flare.query.Arithmetic\"]},\r\n{\"name\":\"flare.query.methods.and\",\"size\":330,\"imports\":[\"flare.query.And\",\"flare.query.methods.or\"]},\r\n{\"name\":\"flare.query.methods.average\",\"size\":287,\"imports\":[\"flare.query.Average\",\"flare.query.methods.or\"]},\r\n{\"name\":\"flare.query.methods.count\",\"size\":277,\"imports\":[\"flare.query.Count\",\"flare.query.methods.or\"]},\r\n{\"name\":\"flare.query.methods.distinct\",\"size\":292,\"imports\":[\"flare.query.Distinct\",\"flare.query.methods.or\"]},\r\n{\"name\":\"flare.query.methods.div\",\"size\":595,\"imports\":[\"flare.query.methods.or\",\"flare.query.Arithmetic\"]},\r\n{\"name\":\"flare.query.methods.eq\",\"size\":594,\"imports\":[\"flare.query.Comparison\",\"flare.query.methods.or\"]},\r\n{\"name\":\"flare.query.methods.fn\",\"size\":460,\"imports\":[\"flare.query.methods.or\",\"flare.query.Fn\"]},\r\n{\"name\":\"flare.query.methods.gt\",\"size\":603,\"imports\":[\"flare.query.Comparison\",\"flare.query.methods.or\"]},\r\n{\"name\":\"flare.query.methods.gte\",\"size\":625,\"imports\":[\"flare.query.Comparison\",\"flare.query.methods.gt\",\"flare.query.methods.eq\",\"flare.query.methods.or\"]},\r\n{\"name\":\"flare.query.methods.iff\",\"size\":748,\"imports\":[\"flare.query.methods.or\",\"flare.query.If\"]},\r\n{\"name\":\"flare.query.methods.isa\",\"size\":461,\"imports\":[\"flare.query.IsA\",\"flare.query.methods.or\"]},\r\n{\"name\":\"flare.query.methods.lt\",\"size\":597,\"imports\":[\"flare.query.Comparison\",\"flare.query.methods.or\"]},\r\n{\"name\":\"flare.query.methods.lte\",\"size\":619,\"imports\":[\"flare.query.Comparison\",\"flare.query.methods.lt\",\"flare.query.methods.eq\",\"flare.query.methods.or\"]},\r\n{\"name\":\"flare.query.methods.max\",\"size\":283,\"imports\":[\"flare.query.Maximum\",\"flare.query.methods.or\"]},\r\n{\"name\":\"flare.query.methods.min\",\"size\":283,\"imports\":[\"flare.query.Minimum\",\"flare.query.methods.or\"]},\r\n{\"name\":\"flare.query.methods.mod\",\"size\":591,\"imports\":[\"flare.query.methods.or\",\"flare.query.Arithmetic\"]},\r\n{\"name\":\"flare.query.methods.mul\",\"size\":603,\"imports\":[\"flare.query.methods.lt\",\"flare.query.methods.or\",\"flare.query.Arithmetic\"]},\r\n{\"name\":\"flare.query.methods.neq\",\"size\":599,\"imports\":[\"flare.query.Comparison\",\"flare.query.methods.eq\",\"flare.query.methods.or\"]},\r\n{\"name\":\"flare.query.methods.not\",\"size\":386,\"imports\":[\"flare.query.Not\",\"flare.query.methods.or\"]},\r\n{\"name\":\"flare.query.methods.or\",\"size\":323,\"imports\":[\"flare.query.Or\"]},\r\n{\"name\":\"flare.query.methods.orderby\",\"size\":307,\"imports\":[\"flare.query.Query\",\"flare.query.methods.or\"]},\r\n{\"name\":\"flare.query.methods.range\",\"size\":772,\"imports\":[\"flare.query.methods.max\",\"flare.query.Range\",\"flare.query.methods.or\",\"flare.query.methods.min\"]},\r\n{\"name\":\"flare.query.methods.select\",\"size\":296,\"imports\":[\"flare.query.Query\"]},\r\n{\"name\":\"flare.query.methods.stddev\",\"size\":363,\"imports\":[\"flare.query.methods.and\",\"flare.query.Variance\",\"flare.query.methods.or\"]},\r\n{\"name\":\"flare.query.methods.sub\",\"size\":600,\"imports\":[\"flare.query.methods.or\",\"flare.query.Arithmetic\"]},\r\n{\"name\":\"flare.query.methods.sum\",\"size\":280,\"imports\":[\"flare.query.Sum\",\"flare.query.methods.or\"]},\r\n{\"name\":\"flare.query.methods.update\",\"size\":307,\"imports\":[\"flare.query.Query\"]},\r\n{\"name\":\"flare.query.methods.variance\",\"size\":335,\"imports\":[\"flare.query.Variance\",\"flare.query.methods.or\"]},\r\n{\"name\":\"flare.query.methods.where\",\"size\":299,\"imports\":[\"flare.query.Query\",\"flare.query.methods.lt\",\"flare.query.methods.lte\"]},\r\n{\"name\":\"flare.query.methods.xor\",\"size\":354,\"imports\":[\"flare.query.Xor\",\"flare.query.methods.or\"]},\r\n{\"name\":\"flare.query.methods._\",\"size\":264,\"imports\":[\"flare.query.Literal\",\"flare.query.methods.or\"]},\r\n{\"name\":\"flare.query.Minimum\",\"size\":843,\"imports\":[\"flare.query.Expression\",\"flare.query.AggregateExpression\"]},\r\n{\"name\":\"flare.query.Not\",\"size\":1554,\"imports\":[\"flare.query.Expression\"]},\r\n{\"name\":\"flare.query.Or\",\"size\":970,\"imports\":[\"flare.query.CompositeExpression\",\"flare.query.Expression\"]},\r\n{\"name\":\"flare.query.Query\",\"size\":13896,\"imports\":[\"flare.query.Variable\",\"flare.query.Sum\",\"flare.query.Expression\",\"flare.util.Sort\",\"flare.query.Not\",\"flare.query.AggregateExpression\",\"flare.query.Literal\",\"flare.util.Filter\",\"flare.util.Property\",\"flare.query.If\"]},\r\n{\"name\":\"flare.query.Range\",\"size\":1594,\"imports\":[\"flare.query.And\",\"flare.query.Comparison\",\"flare.query.Expression\"]},\r\n{\"name\":\"flare.query.StringUtil\",\"size\":4130,\"imports\":[\"flare.query.Fn\"]},\r\n{\"name\":\"flare.query.Sum\",\"size\":791,\"imports\":[\"flare.query.Expression\",\"flare.query.AggregateExpression\"]},\r\n{\"name\":\"flare.query.Variable\",\"size\":1124,\"imports\":[\"flare.query.Expression\",\"flare.util.Property\"]},\r\n{\"name\":\"flare.query.Variance\",\"size\":1876,\"imports\":[\"flare.query.Expression\",\"flare.query.AggregateExpression\"]},\r\n{\"name\":\"flare.query.Xor\",\"size\":1101,\"imports\":[\"flare.query.CompositeExpression\",\"flare.query.Expression\"]},\r\n{\"name\":\"flare.scale.IScaleMap\",\"size\":2105,\"imports\":[\"flare.scale.Scale\"]},\r\n{\"name\":\"flare.scale.LinearScale\",\"size\":1316,\"imports\":[\"flare.util.Maths\",\"flare.util.Strings\",\"flare.scale.Scale\",\"flare.scale.QuantitativeScale\",\"flare.scale.ScaleType\"]},\r\n{\"name\":\"flare.scale.LogScale\",\"size\":3151,\"imports\":[\"flare.util.Maths\",\"flare.util.Strings\",\"flare.scale.Scale\",\"flare.scale.QuantitativeScale\",\"flare.scale.ScaleType\"]},\r\n{\"name\":\"flare.scale.OrdinalScale\",\"size\":3770,\"imports\":[\"flare.scale.ScaleType\",\"flare.util.Arrays\",\"flare.scale.Scale\"]},\r\n{\"name\":\"flare.scale.QuantileScale\",\"size\":2435,\"imports\":[\"flare.util.Maths\",\"flare.util.Strings\",\"flare.scale.Scale\",\"flare.scale.ScaleType\"]},\r\n{\"name\":\"flare.scale.QuantitativeScale\",\"size\":4839,\"imports\":[\"flare.util.Maths\",\"flare.util.Strings\",\"flare.scale.Scale\"]},\r\n{\"name\":\"flare.scale.RootScale\",\"size\":1756,\"imports\":[\"flare.util.Maths\",\"flare.util.Strings\",\"flare.scale.Scale\",\"flare.scale.QuantitativeScale\",\"flare.scale.ScaleType\"]},\r\n{\"name\":\"flare.scale.Scale\",\"size\":4268,\"imports\":[\"flare.scale.ScaleType\",\"flare.util.Strings\"]},\r\n{\"name\":\"flare.scale.ScaleType\",\"size\":1821,\"imports\":[\"flare.scale.Scale\"]},\r\n{\"name\":\"flare.scale.TimeScale\",\"size\":5833,\"imports\":[\"flare.util.Maths\",\"flare.util.Dates\",\"flare.scale.Scale\",\"flare.scale.ScaleType\"]},\r\n{\"name\":\"flare.util.Arrays\",\"size\":8258,\"imports\":[\"flare.util.IValueProxy\",\"flare.util.Property\",\"flare.util.IEvaluable\"]},\r\n{\"name\":\"flare.util.Colors\",\"size\":10001,\"imports\":[\"flare.util.Filter\"]},\r\n{\"name\":\"flare.util.Dates\",\"size\":8217,\"imports\":[\"flare.util.Maths\"]},\r\n{\"name\":\"flare.util.Displays\",\"size\":12555,\"imports\":[\"flare.util.IValueProxy\",\"flare.util.Filter\",\"flare.util.Property\",\"flare.util.IEvaluable\",\"flare.util.Sort\"]},\r\n{\"name\":\"flare.util.Filter\",\"size\":2324,\"imports\":[\"flare.util.IPredicate\",\"flare.util.Property\"]},\r\n{\"name\":\"flare.util.Geometry\",\"size\":10993,\"imports\":[]},\r\n{\"name\":\"flare.util.heap.FibonacciHeap\",\"size\":9354,\"imports\":[\"flare.util.heap.HeapNode\"]},\r\n{\"name\":\"flare.util.heap.HeapNode\",\"size\":1233,\"imports\":[\"flare.util.heap.FibonacciHeap\"]},\r\n{\"name\":\"flare.util.IEvaluable\",\"size\":335,\"imports\":[]},\r\n{\"name\":\"flare.util.IPredicate\",\"size\":383,\"imports\":[]},\r\n{\"name\":\"flare.util.IValueProxy\",\"size\":874,\"imports\":[]},\r\n{\"name\":\"flare.util.math.DenseMatrix\",\"size\":3165,\"imports\":[\"flare.util.math.IMatrix\"]},\r\n{\"name\":\"flare.util.math.IMatrix\",\"size\":2815,\"imports\":[]},\r\n{\"name\":\"flare.util.math.SparseMatrix\",\"size\":3366,\"imports\":[\"flare.util.math.IMatrix\"]},\r\n{\"name\":\"flare.util.Maths\",\"size\":17705,\"imports\":[\"flare.util.Arrays\"]},\r\n{\"name\":\"flare.util.Orientation\",\"size\":1486,\"imports\":[]},\r\n{\"name\":\"flare.util.palette.ColorPalette\",\"size\":6367,\"imports\":[\"flare.util.palette.Palette\",\"flare.util.Colors\"]},\r\n{\"name\":\"flare.util.palette.Palette\",\"size\":1229,\"imports\":[]},\r\n{\"name\":\"flare.util.palette.ShapePalette\",\"size\":2059,\"imports\":[\"flare.util.palette.Palette\",\"flare.util.Shapes\"]},\r\n{\"name\":\"flare.util.palette.SizePalette\",\"size\":2291,\"imports\":[\"flare.util.palette.Palette\"]},\r\n{\"name\":\"flare.util.Property\",\"size\":5559,\"imports\":[\"flare.util.IPredicate\",\"flare.util.IValueProxy\",\"flare.util.IEvaluable\"]},\r\n{\"name\":\"flare.util.Shapes\",\"size\":19118,\"imports\":[\"flare.util.Arrays\"]},\r\n{\"name\":\"flare.util.Sort\",\"size\":6887,\"imports\":[\"flare.util.Arrays\",\"flare.util.Property\"]},\r\n{\"name\":\"flare.util.Stats\",\"size\":6557,\"imports\":[\"flare.util.Arrays\",\"flare.util.Property\"]},\r\n{\"name\":\"flare.util.Strings\",\"size\":22026,\"imports\":[\"flare.util.Dates\",\"flare.util.Property\"]},\r\n{\"name\":\"flare.vis.axis.Axes\",\"size\":1302,\"imports\":[\"flare.animate.Transitioner\",\"flare.vis.Visualization\"]},\r\n{\"name\":\"flare.vis.axis.Axis\",\"size\":24593,\"imports\":[\"flare.animate.Transitioner\",\"flare.scale.LinearScale\",\"flare.util.Arrays\",\"flare.scale.ScaleType\",\"flare.util.Strings\",\"flare.display.TextSprite\",\"flare.scale.Scale\",\"flare.util.Stats\",\"flare.scale.IScaleMap\",\"flare.vis.axis.AxisLabel\",\"flare.vis.axis.AxisGridLine\"]},\r\n{\"name\":\"flare.vis.axis.AxisGridLine\",\"size\":652,\"imports\":[\"flare.vis.axis.Axis\",\"flare.display.LineSprite\"]},\r\n{\"name\":\"flare.vis.axis.AxisLabel\",\"size\":636,\"imports\":[\"flare.vis.axis.Axis\",\"flare.display.TextSprite\"]},\r\n{\"name\":\"flare.vis.axis.CartesianAxes\",\"size\":6703,\"imports\":[\"flare.animate.Transitioner\",\"flare.display.RectSprite\",\"flare.vis.axis.Axis\",\"flare.display.TextSprite\",\"flare.vis.axis.Axes\",\"flare.vis.Visualization\",\"flare.vis.axis.AxisGridLine\"]},\r\n{\"name\":\"flare.vis.controls.AnchorControl\",\"size\":2138,\"imports\":[\"flare.vis.controls.Control\",\"flare.vis.Visualization\",\"flare.vis.operator.layout.Layout\"]},\r\n{\"name\":\"flare.vis.controls.ClickControl\",\"size\":3824,\"imports\":[\"flare.vis.events.SelectionEvent\",\"flare.vis.controls.Control\"]},\r\n{\"name\":\"flare.vis.controls.Control\",\"size\":1353,\"imports\":[\"flare.vis.controls.IControl\",\"flare.util.Filter\"]},\r\n{\"name\":\"flare.vis.controls.ControlList\",\"size\":4665,\"imports\":[\"flare.vis.controls.IControl\",\"flare.util.Arrays\",\"flare.vis.Visualization\",\"flare.vis.controls.Control\"]},\r\n{\"name\":\"flare.vis.controls.DragControl\",\"size\":2649,\"imports\":[\"flare.vis.controls.Control\",\"flare.vis.data.DataSprite\"]},\r\n{\"name\":\"flare.vis.controls.ExpandControl\",\"size\":2832,\"imports\":[\"flare.animate.Transitioner\",\"flare.vis.data.NodeSprite\",\"flare.vis.controls.Control\",\"flare.vis.Visualization\"]},\r\n{\"name\":\"flare.vis.controls.HoverControl\",\"size\":4896,\"imports\":[\"flare.vis.events.SelectionEvent\",\"flare.vis.controls.Control\"]},\r\n{\"name\":\"flare.vis.controls.IControl\",\"size\":763,\"imports\":[\"flare.vis.controls.Control\"]},\r\n{\"name\":\"flare.vis.controls.PanZoomControl\",\"size\":5222,\"imports\":[\"flare.util.Displays\",\"flare.vis.controls.Control\"]},\r\n{\"name\":\"flare.vis.controls.SelectionControl\",\"size\":7862,\"imports\":[\"flare.vis.events.SelectionEvent\",\"flare.vis.controls.Control\"]},\r\n{\"name\":\"flare.vis.controls.TooltipControl\",\"size\":8435,\"imports\":[\"flare.animate.Tween\",\"flare.display.TextSprite\",\"flare.vis.controls.Control\",\"flare.vis.events.TooltipEvent\"]},\r\n{\"name\":\"flare.vis.data.Data\",\"size\":20544,\"imports\":[\"flare.vis.data.EdgeSprite\",\"flare.vis.data.NodeSprite\",\"flare.util.Arrays\",\"flare.vis.data.DataSprite\",\"flare.vis.data.Tree\",\"flare.vis.events.DataEvent\",\"flare.data.DataSet\",\"flare.vis.data.TreeBuilder\",\"flare.vis.data.DataList\",\"flare.data.DataSchema\",\"flare.util.Sort\",\"flare.data.DataField\",\"flare.util.Property\"]},\r\n{\"name\":\"flare.vis.data.DataList\",\"size\":19788,\"imports\":[\"flare.animate.Transitioner\",\"flare.vis.data.NodeSprite\",\"flare.util.Arrays\",\"flare.util.math.DenseMatrix\",\"flare.vis.data.DataSprite\",\"flare.vis.data.EdgeSprite\",\"flare.vis.events.DataEvent\",\"flare.util.Stats\",\"flare.util.math.IMatrix\",\"flare.util.Sort\",\"flare.util.Filter\",\"flare.util.Property\",\"flare.util.IEvaluable\",\"flare.vis.data.Data\"]},\r\n{\"name\":\"flare.vis.data.DataSprite\",\"size\":10349,\"imports\":[\"flare.util.Colors\",\"flare.vis.data.Data\",\"flare.display.DirtySprite\",\"flare.vis.data.render.IRenderer\",\"flare.vis.data.render.ShapeRenderer\"]},\r\n{\"name\":\"flare.vis.data.EdgeSprite\",\"size\":3301,\"imports\":[\"flare.vis.data.render.EdgeRenderer\",\"flare.vis.data.DataSprite\",\"flare.vis.data.NodeSprite\",\"flare.vis.data.render.ArrowType\",\"flare.vis.data.Data\"]},\r\n{\"name\":\"flare.vis.data.NodeSprite\",\"size\":19382,\"imports\":[\"flare.animate.Transitioner\",\"flare.util.Arrays\",\"flare.vis.data.DataSprite\",\"flare.vis.data.EdgeSprite\",\"flare.vis.data.Tree\",\"flare.util.Sort\",\"flare.util.Filter\",\"flare.util.IEvaluable\",\"flare.vis.data.Data\"]},\r\n{\"name\":\"flare.vis.data.render.ArrowType\",\"size\":698,\"imports\":[]},\r\n{\"name\":\"flare.vis.data.render.EdgeRenderer\",\"size\":5569,\"imports\":[\"flare.vis.data.EdgeSprite\",\"flare.vis.data.NodeSprite\",\"flare.vis.data.DataSprite\",\"flare.vis.data.render.IRenderer\",\"flare.util.Shapes\",\"flare.util.Geometry\",\"flare.vis.data.render.ArrowType\"]},\r\n{\"name\":\"flare.vis.data.render.IRenderer\",\"size\":353,\"imports\":[\"flare.vis.data.DataSprite\"]},\r\n{\"name\":\"flare.vis.data.render.ShapeRenderer\",\"size\":2247,\"imports\":[\"flare.util.Shapes\",\"flare.vis.data.render.IRenderer\",\"flare.vis.data.DataSprite\"]},\r\n{\"name\":\"flare.vis.data.ScaleBinding\",\"size\":11275,\"imports\":[\"flare.scale.TimeScale\",\"flare.scale.ScaleType\",\"flare.scale.LinearScale\",\"flare.scale.LogScale\",\"flare.scale.OrdinalScale\",\"flare.scale.RootScale\",\"flare.scale.Scale\",\"flare.scale.QuantileScale\",\"flare.util.Stats\",\"flare.scale.QuantitativeScale\",\"flare.vis.events.DataEvent\",\"flare.vis.data.Data\"]},\r\n{\"name\":\"flare.vis.data.Tree\",\"size\":7147,\"imports\":[\"flare.vis.data.EdgeSprite\",\"flare.vis.events.DataEvent\",\"flare.vis.data.NodeSprite\",\"flare.vis.data.Data\"]},\r\n{\"name\":\"flare.vis.data.TreeBuilder\",\"size\":9930,\"imports\":[\"flare.vis.data.EdgeSprite\",\"flare.vis.data.NodeSprite\",\"flare.vis.data.Tree\",\"flare.util.heap.HeapNode\",\"flare.util.heap.FibonacciHeap\",\"flare.util.Property\",\"flare.util.IEvaluable\",\"flare.vis.data.Data\"]},\r\n{\"name\":\"flare.vis.events.DataEvent\",\"size\":2313,\"imports\":[\"flare.vis.data.EdgeSprite\",\"flare.vis.data.NodeSprite\",\"flare.vis.data.DataList\",\"flare.vis.data.DataSprite\"]},\r\n{\"name\":\"flare.vis.events.SelectionEvent\",\"size\":1880,\"imports\":[\"flare.vis.events.DataEvent\"]},\r\n{\"name\":\"flare.vis.events.TooltipEvent\",\"size\":1701,\"imports\":[\"flare.vis.data.EdgeSprite\",\"flare.vis.data.NodeSprite\"]},\r\n{\"name\":\"flare.vis.events.VisualizationEvent\",\"size\":1117,\"imports\":[\"flare.animate.Transitioner\"]},\r\n{\"name\":\"flare.vis.legend.Legend\",\"size\":20859,\"imports\":[\"flare.animate.Transitioner\",\"flare.vis.data.ScaleBinding\",\"flare.util.palette.SizePalette\",\"flare.scale.ScaleType\",\"flare.vis.legend.LegendItem\",\"flare.display.RectSprite\",\"flare.display.TextSprite\",\"flare.scale.Scale\",\"flare.vis.legend.LegendRange\",\"flare.util.Displays\",\"flare.util.Orientation\",\"flare.util.palette.ShapePalette\",\"flare.util.palette.Palette\",\"flare.util.palette.ColorPalette\"]},\r\n{\"name\":\"flare.vis.legend.LegendItem\",\"size\":4614,\"imports\":[\"flare.util.Shapes\",\"flare.display.TextSprite\",\"flare.vis.legend.Legend\",\"flare.display.RectSprite\"]},\r\n{\"name\":\"flare.vis.legend.LegendRange\",\"size\":10530,\"imports\":[\"flare.util.Colors\",\"flare.vis.legend.Legend\",\"flare.display.RectSprite\",\"flare.display.TextSprite\",\"flare.scale.Scale\",\"flare.util.Stats\",\"flare.scale.IScaleMap\",\"flare.util.Orientation\",\"flare.util.palette.ColorPalette\"]},\r\n{\"name\":\"flare.vis.operator.distortion.BifocalDistortion\",\"size\":4461,\"imports\":[\"flare.vis.operator.distortion.Distortion\"]},\r\n{\"name\":\"flare.vis.operator.distortion.Distortion\",\"size\":6314,\"imports\":[\"flare.animate.Transitioner\",\"flare.vis.data.DataSprite\",\"flare.vis.events.VisualizationEvent\",\"flare.vis.axis.Axis\",\"flare.vis.axis.CartesianAxes\",\"flare.vis.operator.layout.Layout\",\"flare.vis.data.Data\"]},\r\n{\"name\":\"flare.vis.operator.distortion.FisheyeDistortion\",\"size\":3444,\"imports\":[\"flare.vis.operator.distortion.Distortion\"]},\r\n{\"name\":\"flare.vis.operator.encoder.ColorEncoder\",\"size\":3179,\"imports\":[\"flare.animate.Transitioner\",\"flare.scale.ScaleType\",\"flare.vis.operator.encoder.Encoder\",\"flare.util.palette.Palette\",\"flare.util.palette.ColorPalette\",\"flare.vis.data.Data\"]},\r\n{\"name\":\"flare.vis.operator.encoder.Encoder\",\"size\":4060,\"imports\":[\"flare.animate.Transitioner\",\"flare.vis.data.DataSprite\",\"flare.vis.operator.Operator\",\"flare.vis.data.ScaleBinding\",\"flare.util.palette.Palette\",\"flare.util.Filter\",\"flare.util.Property\",\"flare.vis.data.Data\"]},\r\n{\"name\":\"flare.vis.operator.encoder.PropertyEncoder\",\"size\":4138,\"imports\":[\"flare.animate.Transitioner\",\"flare.vis.data.DataList\",\"flare.vis.data.Data\",\"flare.vis.operator.encoder.Encoder\",\"flare.util.Filter\",\"flare.vis.operator.Operator\"]},\r\n{\"name\":\"flare.vis.operator.encoder.ShapeEncoder\",\"size\":1690,\"imports\":[\"flare.util.palette.Palette\",\"flare.scale.ScaleType\",\"flare.util.palette.ShapePalette\",\"flare.vis.operator.encoder.Encoder\",\"flare.vis.data.Data\"]},\r\n{\"name\":\"flare.vis.operator.encoder.SizeEncoder\",\"size\":1830,\"imports\":[\"flare.util.palette.Palette\",\"flare.scale.ScaleType\",\"flare.vis.operator.encoder.Encoder\",\"flare.util.palette.SizePalette\",\"flare.vis.data.Data\"]},\r\n{\"name\":\"flare.vis.operator.filter.FisheyeTreeFilter\",\"size\":5219,\"imports\":[\"flare.animate.Transitioner\",\"flare.vis.data.NodeSprite\",\"flare.vis.data.DataSprite\",\"flare.vis.data.EdgeSprite\",\"flare.vis.data.Tree\",\"flare.vis.operator.Operator\",\"flare.vis.data.Data\"]},\r\n{\"name\":\"flare.vis.operator.filter.GraphDistanceFilter\",\"size\":3165,\"imports\":[\"flare.animate.Transitioner\",\"flare.vis.data.NodeSprite\",\"flare.vis.operator.Operator\",\"flare.vis.data.DataSprite\",\"flare.vis.data.EdgeSprite\"]},\r\n{\"name\":\"flare.vis.operator.filter.VisibilityFilter\",\"size\":3509,\"imports\":[\"flare.vis.operator.Operator\",\"flare.animate.Transitioner\",\"flare.util.Filter\",\"flare.vis.data.DataSprite\",\"flare.vis.data.Data\"]},\r\n{\"name\":\"flare.vis.operator.IOperator\",\"size\":1286,\"imports\":[\"flare.animate.Transitioner\",\"flare.vis.Visualization\",\"flare.vis.operator.Operator\"]},\r\n{\"name\":\"flare.vis.operator.label.Labeler\",\"size\":9956,\"imports\":[\"flare.animate.Transitioner\",\"flare.vis.data.DataSprite\",\"flare.display.TextSprite\",\"flare.vis.operator.Operator\",\"flare.util.Shapes\",\"flare.util.Filter\",\"flare.util.Property\",\"flare.util.IEvaluable\",\"flare.vis.data.Data\"]},\r\n{\"name\":\"flare.vis.operator.label.RadialLabeler\",\"size\":3899,\"imports\":[\"flare.vis.operator.label.Labeler\",\"flare.util.Shapes\",\"flare.display.TextSprite\",\"flare.vis.data.DataSprite\",\"flare.vis.data.Data\"]},\r\n{\"name\":\"flare.vis.operator.label.StackedAreaLabeler\",\"size\":3202,\"imports\":[\"flare.vis.operator.label.Labeler\",\"flare.display.TextSprite\",\"flare.vis.data.DataSprite\",\"flare.vis.data.Data\"]},\r\n{\"name\":\"flare.vis.operator.layout.AxisLayout\",\"size\":6725,\"imports\":[\"flare.scale.ScaleType\",\"flare.vis.data.DataSprite\",\"flare.vis.axis.CartesianAxes\",\"flare.vis.data.ScaleBinding\",\"flare.util.Property\",\"flare.vis.operator.layout.Layout\",\"flare.vis.data.Data\"]},\r\n{\"name\":\"flare.vis.operator.layout.BundledEdgeRouter\",\"size\":3727,\"imports\":[\"flare.animate.Transitioner\",\"flare.vis.data.NodeSprite\",\"flare.util.Arrays\",\"flare.vis.data.DataSprite\",\"flare.vis.data.EdgeSprite\",\"flare.util.Shapes\",\"flare.vis.operator.layout.Layout\",\"flare.vis.operator.Operator\"]},\r\n{\"name\":\"flare.vis.operator.layout.CircleLayout\",\"size\":9317,\"imports\":[\"flare.vis.data.NodeSprite\",\"flare.vis.data.DataList\",\"flare.vis.data.ScaleBinding\",\"flare.util.Property\",\"flare.vis.operator.layout.Layout\",\"flare.vis.data.Data\"]},\r\n{\"name\":\"flare.vis.operator.layout.CirclePackingLayout\",\"size\":12003,\"imports\":[\"flare.vis.data.NodeSprite\",\"flare.vis.data.render.ShapeRenderer\",\"flare.util.Shapes\",\"flare.util.Sort\",\"flare.vis.operator.layout.Layout\",\"flare.vis.data.Data\"]},\r\n{\"name\":\"flare.vis.operator.layout.DendrogramLayout\",\"size\":4853,\"imports\":[\"flare.util.Property\",\"flare.vis.data.NodeSprite\",\"flare.util.Orientation\",\"flare.vis.operator.layout.Layout\",\"flare.vis.data.EdgeSprite\"]},\r\n{\"name\":\"flare.vis.operator.layout.ForceDirectedLayout\",\"size\":8411,\"imports\":[\"flare.physics.Simulation\",\"flare.animate.Transitioner\",\"flare.vis.data.NodeSprite\",\"flare.vis.data.DataSprite\",\"flare.physics.Particle\",\"flare.physics.Spring\",\"flare.vis.operator.layout.Layout\",\"flare.vis.data.EdgeSprite\",\"flare.vis.data.Data\"]},\r\n{\"name\":\"flare.vis.operator.layout.IcicleTreeLayout\",\"size\":4864,\"imports\":[\"flare.vis.data.NodeSprite\",\"flare.util.Orientation\",\"flare.vis.operator.layout.Layout\"]},\r\n{\"name\":\"flare.vis.operator.layout.IndentedTreeLayout\",\"size\":3174,\"imports\":[\"flare.animate.Transitioner\",\"flare.vis.data.NodeSprite\",\"flare.util.Arrays\",\"flare.vis.operator.layout.Layout\",\"flare.vis.data.EdgeSprite\"]},\r\n{\"name\":\"flare.vis.operator.layout.Layout\",\"size\":7881,\"imports\":[\"flare.animate.Transitioner\",\"flare.vis.data.NodeSprite\",\"flare.vis.data.DataList\",\"flare.vis.data.DataSprite\",\"flare.vis.data.EdgeSprite\",\"flare.vis.Visualization\",\"flare.vis.axis.CartesianAxes\",\"flare.vis.axis.Axes\",\"flare.animate.TransitionEvent\",\"flare.vis.operator.Operator\"]},\r\n{\"name\":\"flare.vis.operator.layout.NodeLinkTreeLayout\",\"size\":12870,\"imports\":[\"flare.vis.data.NodeSprite\",\"flare.util.Arrays\",\"flare.util.Orientation\",\"flare.vis.operator.layout.Layout\"]},\r\n{\"name\":\"flare.vis.operator.layout.PieLayout\",\"size\":2728,\"imports\":[\"flare.vis.data.DataList\",\"flare.vis.data.DataSprite\",\"flare.util.Shapes\",\"flare.util.Property\",\"flare.vis.operator.layout.Layout\",\"flare.vis.data.Data\"]},\r\n{\"name\":\"flare.vis.operator.layout.RadialTreeLayout\",\"size\":12348,\"imports\":[\"flare.vis.data.NodeSprite\",\"flare.util.Arrays\",\"flare.vis.operator.layout.Layout\"]},\r\n{\"name\":\"flare.vis.operator.layout.RandomLayout\",\"size\":870,\"imports\":[\"flare.vis.operator.layout.Layout\",\"flare.vis.data.DataSprite\",\"flare.vis.data.Data\"]},\r\n{\"name\":\"flare.vis.operator.layout.StackedAreaLayout\",\"size\":9121,\"imports\":[\"flare.scale.TimeScale\",\"flare.scale.LinearScale\",\"flare.util.Arrays\",\"flare.scale.OrdinalScale\",\"flare.vis.data.NodeSprite\",\"flare.scale.Scale\",\"flare.vis.axis.CartesianAxes\",\"flare.util.Stats\",\"flare.util.Orientation\",\"flare.scale.QuantitativeScale\",\"flare.util.Maths\",\"flare.vis.operator.layout.Layout\"]},\r\n{\"name\":\"flare.vis.operator.layout.TreeMapLayout\",\"size\":9191,\"imports\":[\"flare.animate.Transitioner\",\"flare.vis.data.NodeSprite\",\"flare.util.Property\",\"flare.vis.operator.layout.Layout\"]},\r\n{\"name\":\"flare.vis.operator.Operator\",\"size\":2490,\"imports\":[\"flare.animate.Transitioner\",\"flare.vis.operator.IOperator\",\"flare.util.Property\",\"flare.util.IEvaluable\",\"flare.vis.Visualization\"]},\r\n{\"name\":\"flare.vis.operator.OperatorList\",\"size\":5248,\"imports\":[\"flare.animate.Transitioner\",\"flare.util.Arrays\",\"flare.vis.operator.IOperator\",\"flare.vis.Visualization\",\"flare.vis.operator.Operator\"]},\r\n{\"name\":\"flare.vis.operator.OperatorSequence\",\"size\":4190,\"imports\":[\"flare.animate.Transitioner\",\"flare.util.Arrays\",\"flare.vis.operator.IOperator\",\"flare.vis.operator.OperatorList\",\"flare.animate.FunctionSequence\",\"flare.vis.operator.Operator\"]},\r\n{\"name\":\"flare.vis.operator.OperatorSwitch\",\"size\":2581,\"imports\":[\"flare.animate.Transitioner\",\"flare.vis.operator.OperatorList\",\"flare.vis.operator.IOperator\",\"flare.vis.operator.Operator\"]},\r\n{\"name\":\"flare.vis.operator.SortOperator\",\"size\":2023,\"imports\":[\"flare.vis.operator.Operator\",\"flare.animate.Transitioner\",\"flare.util.Arrays\",\"flare.vis.data.Data\"]},\r\n{\"name\":\"flare.vis.Visualization\",\"size\":16540,\"imports\":[\"flare.animate.Transitioner\",\"flare.vis.operator.IOperator\",\"flare.animate.Scheduler\",\"flare.vis.events.VisualizationEvent\",\"flare.vis.data.Tree\",\"flare.vis.events.DataEvent\",\"flare.vis.axis.Axes\",\"flare.vis.axis.CartesianAxes\",\"flare.util.Displays\",\"flare.vis.operator.OperatorList\",\"flare.vis.controls.ControlList\",\"flare.animate.ISchedulable\",\"flare.vis.data.Data\"]}\r\n]"
 ,"description":"Another example pasted from http://bl.ocks.org/mbostock/7607999"
 ,"style":"/* CSS Styles */\r\n.node {\r\n  font: 300 11px \"Helvetica Neue\", Helvetica, Arial, sans-serif;\r\n  fill: #bbb;\r\n}\r\n\r\n.node:hover {\r\n  fill: white;\r\n}\r\n\r\n.link {\r\n  stroke: steelblue;\r\n  stroke-opacity: .4;\r\n  fill: none;\r\n  pointer-events: none;\r\n}\r\n\r\n.node:hover,\r\n.node--source,\r\n.node--target {\r\n  font-weight: 700;\r\n}\r\n\r\n.node--source {\r\n  fill: #2ca02c;\r\n}\r\n\r\n.node--target {\r\n  fill: #d62728;\r\n}\r\n\r\n.link--source,\r\n.link--target {\r\n  stroke-opacity: 1;\r\n  stroke-width: 2px;\r\n}\r\n\r\n.link--source {\r\n  stroke: #d62728;\r\n}\r\n\r\n.link--target {\r\n  stroke: #2ca02c;\r\n}"
 ,"script":"// D3 Script\r\nvar diameter = 800,\r\n    radius = diameter / 2,\r\n    innerRadius = radius - 120;\r\n\r\nvar cluster = d3.layout.cluster()\r\n    .size([360, innerRadius])\r\n    .sort(null)\r\n    .value(function(d) { return d.size; });\r\n\r\nvar bundle = d3.layout.bundle();\r\n\r\nvar line = d3.svg.line.radial()\r\n    .interpolate(\"bundle\")\r\n    .tension(.85)\r\n    .radius(function(d) { return d.y; })\r\n    .angle(function(d) { return d.x / 180 * Math.PI; });\r\n\r\nvar svg = d3.select(\"#chart\").append(\"svg\")\r\n    .attr(\"width\", diameter)\r\n    .attr(\"height\", diameter)\r\n  .append(\"g\")\r\n    .attr(\"transform\", \"translate(\" + radius + \",\" + radius + \")\");\r\n\r\nvar link = svg.append(\"g\").selectAll(\".link\"),\r\n    node = svg.append(\"g\").selectAll(\".node\");\r\n\r\nd3.json(\"$$this$$\", function(error, classes) {\r\n  if (error) throw error;\r\n\r\n  var nodes = cluster.nodes(packageHierarchy(classes)),\r\n      links = packageImports(nodes);\r\n\r\n  link = link\r\n      .data(bundle(links))\r\n    .enter().append(\"path\")\r\n      .each(function(d) { d.source = d[0], d.target = d[d.length - 1]; })\r\n      .attr(\"class\", \"link\")\r\n      .attr(\"d\", line);\r\n\r\n  node = node\r\n      .data(nodes.filter(function(n) { return !n.children; }))\r\n    .enter().append(\"text\")\r\n      .attr(\"class\", \"node\")\r\n      .attr(\"dy\", \".31em\")\r\n      .attr(\"transform\", function(d) { return \"rotate(\" + (d.x - 90) + \")translate(\" + (d.y + 8) + \",0)\" + (d.x < 180 ? \"\" : \"rotate(180)\"); })\r\n      .style(\"text-anchor\", function(d) { return d.x < 180 ? \"start\" : \"end\"; })\r\n      .text(function(d) { return d.key; })\r\n      .on(\"mouseover\", mouseovered)\r\n      .on(\"mouseout\", mouseouted);\r\n});\r\n\r\nfunction mouseovered(d) {\r\n  node\r\n      .each(function(n) { n.target = n.source = false; });\r\n\r\n  link\r\n      .classed(\"link--target\", function(l) { if (l.target === d) return l.source.source = true; })\r\n      .classed(\"link--source\", function(l) { if (l.source === d) return l.target.target = true; })\r\n    .filter(function(l) { return l.target === d || l.source === d; })\r\n      .each(function() { this.parentNode.appendChild(this); });\r\n\r\n  node\r\n      .classed(\"node--target\", function(n) { return n.target; })\r\n      .classed(\"node--source\", function(n) { return n.source; });\r\n}\r\n\r\nfunction mouseouted(d) {\r\n  link\r\n      .classed(\"link--target\", false)\r\n      .classed(\"link--source\", false);\r\n\r\n  node\r\n      .classed(\"node--target\", false)\r\n      .classed(\"node--source\", false);\r\n}\r\n\r\nd3.select(self.frameElement).style(\"height\", diameter + \"px\");\r\n\r\n// Lazily construct the package hierarchy from class names.\r\nfunction packageHierarchy(classes) {\r\n  var map = {};\r\n\r\n  function find(name, data) {\r\n    var node = map[name], i;\r\n    if (!node) {\r\n      node = map[name] = data || {name: name, children: []};\r\n      if (name.length) {\r\n        node.parent = find(name.substring(0, i = name.lastIndexOf(\".\")));\r\n        node.parent.children.push(node);\r\n        node.key = name.substring(i + 1);\r\n      }\r\n    }\r\n    return node;\r\n  }\r\n\r\n  classes.forEach(function(d) {\r\n    find(d.name, d);\r\n  });\r\n\r\n  return map[\"\"];\r\n}\r\n\r\n// Return a list of imports for the given array of nodes.\r\nfunction packageImports(nodes) {\r\n  var map = {},\r\n      imports = [];\r\n\r\n  // Compute a map from name to node.\r\n  nodes.forEach(function(d) {\r\n    map[d.name] = d;\r\n  });\r\n\r\n  // For each import, construct a link from the source to target node.\r\n  nodes.forEach(function(d) {\r\n    if (d.imports) d.imports.forEach(function(i) {\r\n      imports.push({source: map[d.name], target: map[i]});\r\n    });\r\n  });\r\n\r\n  return imports;\r\n}"
 ,"plugins": [] },
{"@rid":"33:9", "@class":"D3Script"
, "name":"Zoomable Treemap"
 ,"dataScript":"{\r\n \"name\": \"flare\",\r\n \"children\": [\r\n  {\r\n   \"name\": \"analytics\",\r\n   \"children\": [\r\n    {\r\n     \"name\": \"cluster\",\r\n     \"children\": [\r\n      {\"name\": \"AgglomerativeCluster\", \"size\": 3938},\r\n      {\"name\": \"CommunityStructure\", \"size\": 3812},\r\n      {\"name\": \"HierarchicalCluster\", \"size\": 6714},\r\n      {\"name\": \"MergeEdge\", \"size\": 743}\r\n     ]\r\n    },\r\n    {\r\n     \"name\": \"graph\",\r\n     \"children\": [\r\n      {\"name\": \"BetweennessCentrality\", \"size\": 3534},\r\n      {\"name\": \"LinkDistance\", \"size\": 5731},\r\n      {\"name\": \"MaxFlowMinCut\", \"size\": 7840},\r\n      {\"name\": \"ShortestPaths\", \"size\": 5914},\r\n      {\"name\": \"SpanningTree\", \"size\": 3416}\r\n     ]\r\n    },\r\n    {\r\n     \"name\": \"optimization\",\r\n     \"children\": [\r\n      {\"name\": \"AspectRatioBanker\", \"size\": 7074}\r\n     ]\r\n    }\r\n   ]\r\n  },\r\n  {\r\n   \"name\": \"animate\",\r\n   \"children\": [\r\n    {\"name\": \"Easing\", \"size\": 17010},\r\n    {\"name\": \"FunctionSequence\", \"size\": 5842},\r\n    {\r\n     \"name\": \"interpolate\",\r\n     \"children\": [\r\n      {\"name\": \"ArrayInterpolator\", \"size\": 1983},\r\n      {\"name\": \"ColorInterpolator\", \"size\": 2047},\r\n      {\"name\": \"DateInterpolator\", \"size\": 1375},\r\n      {\"name\": \"Interpolator\", \"size\": 8746},\r\n      {\"name\": \"MatrixInterpolator\", \"size\": 2202},\r\n      {\"name\": \"NumberInterpolator\", \"size\": 1382},\r\n      {\"name\": \"ObjectInterpolator\", \"size\": 1629},\r\n      {\"name\": \"PointInterpolator\", \"size\": 1675},\r\n      {\"name\": \"RectangleInterpolator\", \"size\": 2042}\r\n     ]\r\n    },\r\n    {\"name\": \"ISchedulable\", \"size\": 1041},\r\n    {\"name\": \"Parallel\", \"size\": 5176},\r\n    {\"name\": \"Pause\", \"size\": 449},\r\n    {\"name\": \"Scheduler\", \"size\": 5593},\r\n    {\"name\": \"Sequence\", \"size\": 5534},\r\n    {\"name\": \"Transition\", \"size\": 9201},\r\n    {\"name\": \"Transitioner\", \"size\": 19975},\r\n    {\"name\": \"TransitionEvent\", \"size\": 1116},\r\n    {\"name\": \"Tween\", \"size\": 6006}\r\n   ]\r\n  },\r\n  {\r\n   \"name\": \"data\",\r\n   \"children\": [\r\n    {\r\n     \"name\": \"converters\",\r\n     \"children\": [\r\n      {\"name\": \"Converters\", \"size\": 721},\r\n      {\"name\": \"DelimitedTextConverter\", \"size\": 4294},\r\n      {\"name\": \"GraphMLConverter\", \"size\": 9800},\r\n      {\"name\": \"IDataConverter\", \"size\": 1314},\r\n      {\"name\": \"JSONConverter\", \"size\": 2220}\r\n     ]\r\n    },\r\n    {\"name\": \"DataField\", \"size\": 1759},\r\n    {\"name\": \"DataSchema\", \"size\": 2165},\r\n    {\"name\": \"DataSet\", \"size\": 586},\r\n    {\"name\": \"DataSource\", \"size\": 3331},\r\n    {\"name\": \"DataTable\", \"size\": 772},\r\n    {\"name\": \"DataUtil\", \"size\": 3322}\r\n   ]\r\n  },\r\n  {\r\n   \"name\": \"display\",\r\n   \"children\": [\r\n    {\"name\": \"DirtySprite\", \"size\": 8833},\r\n    {\"name\": \"LineSprite\", \"size\": 1732},\r\n    {\"name\": \"RectSprite\", \"size\": 3623},\r\n    {\"name\": \"TextSprite\", \"size\": 10066}\r\n   ]\r\n  },\r\n  {\r\n   \"name\": \"flex\",\r\n   \"children\": [\r\n    {\"name\": \"FlareVis\", \"size\": 4116}\r\n   ]\r\n  },\r\n  {\r\n   \"name\": \"physics\",\r\n   \"children\": [\r\n    {\"name\": \"DragForce\", \"size\": 1082},\r\n    {\"name\": \"GravityForce\", \"size\": 1336},\r\n    {\"name\": \"IForce\", \"size\": 319},\r\n    {\"name\": \"NBodyForce\", \"size\": 10498},\r\n    {\"name\": \"Particle\", \"size\": 2822},\r\n    {\"name\": \"Simulation\", \"size\": 9983},\r\n    {\"name\": \"Spring\", \"size\": 2213},\r\n    {\"name\": \"SpringForce\", \"size\": 1681}\r\n   ]\r\n  },\r\n  {\r\n   \"name\": \"query\",\r\n   \"children\": [\r\n    {\"name\": \"AggregateExpression\", \"size\": 1616},\r\n    {\"name\": \"And\", \"size\": 1027},\r\n    {\"name\": \"Arithmetic\", \"size\": 3891},\r\n    {\"name\": \"Average\", \"size\": 891},\r\n    {\"name\": \"BinaryExpression\", \"size\": 2893},\r\n    {\"name\": \"Comparison\", \"size\": 5103},\r\n    {\"name\": \"CompositeExpression\", \"size\": 3677},\r\n    {\"name\": \"Count\", \"size\": 781},\r\n    {\"name\": \"DateUtil\", \"size\": 4141},\r\n    {\"name\": \"Distinct\", \"size\": 933},\r\n    {\"name\": \"Expression\", \"size\": 5130},\r\n    {\"name\": \"ExpressionIterator\", \"size\": 3617},\r\n    {\"name\": \"Fn\", \"size\": 3240},\r\n    {\"name\": \"If\", \"size\": 2732},\r\n    {\"name\": \"IsA\", \"size\": 2039},\r\n    {\"name\": \"Literal\", \"size\": 1214},\r\n    {\"name\": \"Match\", \"size\": 3748},\r\n    {\"name\": \"Maximum\", \"size\": 843},\r\n    {\r\n     \"name\": \"methods\",\r\n     \"children\": [\r\n      {\"name\": \"add\", \"size\": 593},\r\n      {\"name\": \"and\", \"size\": 330},\r\n      {\"name\": \"average\", \"size\": 287},\r\n      {\"name\": \"count\", \"size\": 277},\r\n      {\"name\": \"distinct\", \"size\": 292},\r\n      {\"name\": \"div\", \"size\": 595},\r\n      {\"name\": \"eq\", \"size\": 594},\r\n      {\"name\": \"fn\", \"size\": 460},\r\n      {\"name\": \"gt\", \"size\": 603},\r\n      {\"name\": \"gte\", \"size\": 625},\r\n      {\"name\": \"iff\", \"size\": 748},\r\n      {\"name\": \"isa\", \"size\": 461},\r\n      {\"name\": \"lt\", \"size\": 597},\r\n      {\"name\": \"lte\", \"size\": 619},\r\n      {\"name\": \"max\", \"size\": 283},\r\n      {\"name\": \"min\", \"size\": 283},\r\n      {\"name\": \"mod\", \"size\": 591},\r\n      {\"name\": \"mul\", \"size\": 603},\r\n      {\"name\": \"neq\", \"size\": 599},\r\n      {\"name\": \"not\", \"size\": 386},\r\n      {\"name\": \"or\", \"size\": 323},\r\n      {\"name\": \"orderby\", \"size\": 307},\r\n      {\"name\": \"range\", \"size\": 772},\r\n      {\"name\": \"select\", \"size\": 296},\r\n      {\"name\": \"stddev\", \"size\": 363},\r\n      {\"name\": \"sub\", \"size\": 600},\r\n      {\"name\": \"sum\", \"size\": 280},\r\n      {\"name\": \"update\", \"size\": 307},\r\n      {\"name\": \"variance\", \"size\": 335},\r\n      {\"name\": \"where\", \"size\": 299},\r\n      {\"name\": \"xor\", \"size\": 354},\r\n      {\"name\": \"_\", \"size\": 264}\r\n     ]\r\n    },\r\n    {\"name\": \"Minimum\", \"size\": 843},\r\n    {\"name\": \"Not\", \"size\": 1554},\r\n    {\"name\": \"Or\", \"size\": 970},\r\n    {\"name\": \"Query\", \"size\": 13896},\r\n    {\"name\": \"Range\", \"size\": 1594},\r\n    {\"name\": \"StringUtil\", \"size\": 4130},\r\n    {\"name\": \"Sum\", \"size\": 791},\r\n    {\"name\": \"Variable\", \"size\": 1124},\r\n    {\"name\": \"Variance\", \"size\": 1876},\r\n    {\"name\": \"Xor\", \"size\": 1101}\r\n   ]\r\n  },\r\n  {\r\n   \"name\": \"scale\",\r\n   \"children\": [\r\n    {\"name\": \"IScaleMap\", \"size\": 2105},\r\n    {\"name\": \"LinearScale\", \"size\": 1316},\r\n    {\"name\": \"LogScale\", \"size\": 3151},\r\n    {\"name\": \"OrdinalScale\", \"size\": 3770},\r\n    {\"name\": \"QuantileScale\", \"size\": 2435},\r\n    {\"name\": \"QuantitativeScale\", \"size\": 4839},\r\n    {\"name\": \"RootScale\", \"size\": 1756},\r\n    {\"name\": \"Scale\", \"size\": 4268},\r\n    {\"name\": \"ScaleType\", \"size\": 1821},\r\n    {\"name\": \"TimeScale\", \"size\": 5833}\r\n   ]\r\n  },\r\n  {\r\n   \"name\": \"util\",\r\n   \"children\": [\r\n    {\"name\": \"Arrays\", \"size\": 8258},\r\n    {\"name\": \"Colors\", \"size\": 10001},\r\n    {\"name\": \"Dates\", \"size\": 8217},\r\n    {\"name\": \"Displays\", \"size\": 12555},\r\n    {\"name\": \"Filter\", \"size\": 2324},\r\n    {\"name\": \"Geometry\", \"size\": 10993},\r\n    {\r\n     \"name\": \"heap\",\r\n     \"children\": [\r\n      {\"name\": \"FibonacciHeap\", \"size\": 9354},\r\n      {\"name\": \"HeapNode\", \"size\": 1233}\r\n     ]\r\n    },\r\n    {\"name\": \"IEvaluable\", \"size\": 335},\r\n    {\"name\": \"IPredicate\", \"size\": 383},\r\n    {\"name\": \"IValueProxy\", \"size\": 874},\r\n    {\r\n     \"name\": \"math\",\r\n     \"children\": [\r\n      {\"name\": \"DenseMatrix\", \"size\": 3165},\r\n      {\"name\": \"IMatrix\", \"size\": 2815},\r\n      {\"name\": \"SparseMatrix\", \"size\": 3366}\r\n     ]\r\n    },\r\n    {\"name\": \"Maths\", \"size\": 17705},\r\n    {\"name\": \"Orientation\", \"size\": 1486},\r\n    {\r\n     \"name\": \"palette\",\r\n     \"children\": [\r\n      {\"name\": \"ColorPalette\", \"size\": 6367},\r\n      {\"name\": \"Palette\", \"size\": 1229},\r\n      {\"name\": \"ShapePalette\", \"size\": 2059},\r\n      {\"name\": \"SizePalette\", \"size\": 2291}\r\n     ]\r\n    },\r\n    {\"name\": \"Property\", \"size\": 5559},\r\n    {\"name\": \"Shapes\", \"size\": 19118},\r\n    {\"name\": \"Sort\", \"size\": 6887},\r\n    {\"name\": \"Stats\", \"size\": 6557},\r\n    {\"name\": \"Strings\", \"size\": 22026}\r\n   ]\r\n  },\r\n  {\r\n   \"name\": \"vis\",\r\n   \"children\": [\r\n    {\r\n     \"name\": \"axis\",\r\n     \"children\": [\r\n      {\"name\": \"Axes\", \"size\": 1302},\r\n      {\"name\": \"Axis\", \"size\": 24593},\r\n      {\"name\": \"AxisGridLine\", \"size\": 652},\r\n      {\"name\": \"AxisLabel\", \"size\": 636},\r\n      {\"name\": \"CartesianAxes\", \"size\": 6703}\r\n     ]\r\n    },\r\n    {\r\n     \"name\": \"controls\",\r\n     \"children\": [\r\n      {\"name\": \"AnchorControl\", \"size\": 2138},\r\n      {\"name\": \"ClickControl\", \"size\": 3824},\r\n      {\"name\": \"Control\", \"size\": 1353},\r\n      {\"name\": \"ControlList\", \"size\": 4665},\r\n      {\"name\": \"DragControl\", \"size\": 2649},\r\n      {\"name\": \"ExpandControl\", \"size\": 2832},\r\n      {\"name\": \"HoverControl\", \"size\": 4896},\r\n      {\"name\": \"IControl\", \"size\": 763},\r\n      {\"name\": \"PanZoomControl\", \"size\": 5222},\r\n      {\"name\": \"SelectionControl\", \"size\": 7862},\r\n      {\"name\": \"TooltipControl\", \"size\": 8435}\r\n     ]\r\n    },\r\n    {\r\n     \"name\": \"data\",\r\n     \"children\": [\r\n      {\"name\": \"Data\", \"size\": 20544},\r\n      {\"name\": \"DataList\", \"size\": 19788},\r\n      {\"name\": \"DataSprite\", \"size\": 10349},\r\n      {\"name\": \"EdgeSprite\", \"size\": 3301},\r\n      {\"name\": \"NodeSprite\", \"size\": 19382},\r\n      {\r\n       \"name\": \"render\",\r\n       \"children\": [\r\n        {\"name\": \"ArrowType\", \"size\": 698},\r\n        {\"name\": \"EdgeRenderer\", \"size\": 5569},\r\n        {\"name\": \"IRenderer\", \"size\": 353},\r\n        {\"name\": \"ShapeRenderer\", \"size\": 2247}\r\n       ]\r\n      },\r\n      {\"name\": \"ScaleBinding\", \"size\": 11275},\r\n      {\"name\": \"Tree\", \"size\": 7147},\r\n      {\"name\": \"TreeBuilder\", \"size\": 9930}\r\n     ]\r\n    },\r\n    {\r\n     \"name\": \"events\",\r\n     \"children\": [\r\n      {\"name\": \"DataEvent\", \"size\": 2313},\r\n      {\"name\": \"SelectionEvent\", \"size\": 1880},\r\n      {\"name\": \"TooltipEvent\", \"size\": 1701},\r\n      {\"name\": \"VisualizationEvent\", \"size\": 1117}\r\n     ]\r\n    },\r\n    {\r\n     \"name\": \"legend\",\r\n     \"children\": [\r\n      {\"name\": \"Legend\", \"size\": 20859},\r\n      {\"name\": \"LegendItem\", \"size\": 4614},\r\n      {\"name\": \"LegendRange\", \"size\": 10530}\r\n     ]\r\n    },\r\n    {\r\n     \"name\": \"operator\",\r\n     \"children\": [\r\n      {\r\n       \"name\": \"distortion\",\r\n       \"children\": [\r\n        {\"name\": \"BifocalDistortion\", \"size\": 4461},\r\n        {\"name\": \"Distortion\", \"size\": 6314},\r\n        {\"name\": \"FisheyeDistortion\", \"size\": 3444}\r\n       ]\r\n      },\r\n      {\r\n       \"name\": \"encoder\",\r\n       \"children\": [\r\n        {\"name\": \"ColorEncoder\", \"size\": 3179},\r\n        {\"name\": \"Encoder\", \"size\": 4060},\r\n        {\"name\": \"PropertyEncoder\", \"size\": 4138},\r\n        {\"name\": \"ShapeEncoder\", \"size\": 1690},\r\n        {\"name\": \"SizeEncoder\", \"size\": 1830}\r\n       ]\r\n      },\r\n      {\r\n       \"name\": \"filter\",\r\n       \"children\": [\r\n        {\"name\": \"FisheyeTreeFilter\", \"size\": 5219},\r\n        {\"name\": \"GraphDistanceFilter\", \"size\": 3165},\r\n        {\"name\": \"VisibilityFilter\", \"size\": 3509}\r\n       ]\r\n      },\r\n      {\"name\": \"IOperator\", \"size\": 1286},\r\n      {\r\n       \"name\": \"label\",\r\n       \"children\": [\r\n        {\"name\": \"Labeler\", \"size\": 9956},\r\n        {\"name\": \"RadialLabeler\", \"size\": 3899},\r\n        {\"name\": \"StackedAreaLabeler\", \"size\": 3202}\r\n       ]\r\n      },\r\n      {\r\n       \"name\": \"layout\",\r\n       \"children\": [\r\n        {\"name\": \"AxisLayout\", \"size\": 6725},\r\n        {\"name\": \"BundledEdgeRouter\", \"size\": 3727},\r\n        {\"name\": \"CircleLayout\", \"size\": 9317},\r\n        {\"name\": \"CirclePackingLayout\", \"size\": 12003},\r\n        {\"name\": \"DendrogramLayout\", \"size\": 4853},\r\n        {\"name\": \"ForceDirectedLayout\", \"size\": 8411},\r\n        {\"name\": \"IcicleTreeLayout\", \"size\": 4864},\r\n        {\"name\": \"IndentedTreeLayout\", \"size\": 3174},\r\n        {\"name\": \"Layout\", \"size\": 7881},\r\n        {\"name\": \"NodeLinkTreeLayout\", \"size\": 12870},\r\n        {\"name\": \"PieLayout\", \"size\": 2728},\r\n        {\"name\": \"RadialTreeLayout\", \"size\": 12348},\r\n        {\"name\": \"RandomLayout\", \"size\": 870},\r\n        {\"name\": \"StackedAreaLayout\", \"size\": 9121},\r\n        {\"name\": \"TreeMapLayout\", \"size\": 9191}\r\n       ]\r\n      },\r\n      {\"name\": \"Operator\", \"size\": 2490},\r\n      {\"name\": \"OperatorList\", \"size\": 5248},\r\n      {\"name\": \"OperatorSequence\", \"size\": 4190},\r\n      {\"name\": \"OperatorSwitch\", \"size\": 2581},\r\n      {\"name\": \"SortOperator\", \"size\": 2023}\r\n     ]\r\n    },\r\n    {\"name\": \"Visualization\", \"size\": 16540}\r\n   ]\r\n  }\r\n ]\r\n}"
 ,"description":"Zoomable treemap base on flare data.  From http://mbostock.github.io/d3/talk/20111018/treemap.html"
 ,"style":"/* CSS Styles */\r\n.chart {\r\n  display: block;\r\n  margin: auto;\r\n  margin-top: 40px;\r\n}\r\n\r\ntext {\r\n  font-size: 11px;\r\n}\r\n\r\nrect {\r\n  fill: none;\r\n}"
 ,"script":"// D3 Script\r\n\r\nvar w = 1280 - 80,\r\n    h = 800 - 180,\r\n    x = d3.scale.linear().range([0, w]),\r\n    y = d3.scale.linear().range([0, h]),\r\n    color = d3.scale.category20c(),\r\n    root,\r\n    node;\r\n\r\nvar treemap = d3.layout.treemap()\r\n    .round(false)\r\n    .size([w, h])\r\n    .sticky(true)\r\n    .value(function(d) { return d.size; });\r\n\r\nvar svg = d3.select(\"#chart\").append(\"div\")\r\n    .attr(\"class\", \"chart\")\r\n    .style(\"width\", w + \"px\")\r\n    .style(\"height\", h + \"px\")\r\n  .append(\"svg:svg\")\r\n    .attr(\"width\", w)\r\n    .attr(\"height\", h)\r\n  .append(\"svg:g\")\r\n    .attr(\"transform\", \"translate(.5,.5)\");\r\n\r\nd3.json(\"$$this$$\", function(data) {\r\n  node = root = data;\r\n\r\n  var nodes = treemap.nodes(root)\r\n      .filter(function(d) { return !d.children; });\r\n\r\n  var cell = svg.selectAll(\"g\")\r\n      .data(nodes)\r\n    .enter().append(\"svg:g\")\r\n      .attr(\"class\", \"cell\")\r\n      .attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; })\r\n      .on(\"click\", function(d) { return zoom(node == d.parent ? root : d.parent); });\r\n\r\n  cell.append(\"svg:rect\")\r\n      .attr(\"width\", function(d) { return d.dx - 1; })\r\n      .attr(\"height\", function(d) { return d.dy - 1; })\r\n      .style(\"fill\", function(d) { return color(d.parent.name); });\r\n\r\n  cell.append(\"svg:text\")\r\n      .attr(\"x\", function(d) { return d.dx / 2; })\r\n      .attr(\"y\", function(d) { return d.dy / 2; })\r\n      .attr(\"dy\", \".35em\")\r\n      .attr(\"text-anchor\", \"middle\")\r\n      .text(function(d) { return d.name; })\r\n      .style(\"opacity\", function(d) { d.w = this.getComputedTextLength(); return d.dx > d.w ? 1 : 0; });\r\n\r\n  d3.select(window).on(\"click\", function() { zoom(root); });\r\n\r\n  d3.select(\"select\").on(\"change\", function() {\r\n    treemap.value(this.value == \"size\" ? size : count).nodes(root);\r\n    zoom(node);\r\n  });\r\n});\r\n\r\nfunction size(d) {\r\n  return d.size;\r\n}\r\n\r\nfunction count(d) {\r\n  return 1;\r\n}\r\n\r\nfunction zoom(d) {\r\n  var kx = w / d.dx, ky = h / d.dy;\r\n  x.domain([d.x, d.x + d.dx]);\r\n  y.domain([d.y, d.y + d.dy]);\r\n\r\n  var t = svg.selectAll(\"g.cell\").transition()\r\n      .duration(d3.event.altKey ? 7500 : 750)\r\n      .attr(\"transform\", function(d) { return \"translate(\" + x(d.x) + \",\" + y(d.y) + \")\"; });\r\n\r\n  t.select(\"rect\")\r\n      .attr(\"width\", function(d) { return kx * d.dx - 1; })\r\n      .attr(\"height\", function(d) { return ky * d.dy - 1; })\r\n\r\n  t.select(\"text\")\r\n      .attr(\"x\", function(d) { return kx * d.dx / 2; })\r\n      .attr(\"y\", function(d) { return ky * d.dy / 2; })\r\n      .style(\"opacity\", function(d) { return kx * d.dx > d.w ? 1 : 0; });\r\n\r\n  node = d;\r\n  d3.event.stopPropagation();\r\n}"
 ,"plugins": [] },
{"@rid":"33:10", "@class":"D3Script"
, "name":"Co-occurence matrix"
 ,"dataScript":"{\"nodes\":[{\"name\":\"Myriel\",\"group\":1},{\"name\":\"Napoleon\",\"group\":1},{\"name\":\"Mlle.Baptistine\",\"group\":1},{\"name\":\"Mme.Magloire\",\"group\":1},{\"name\":\"CountessdeLo\",\"group\":1},{\"name\":\"Geborand\",\"group\":1},{\"name\":\"Champtercier\",\"group\":1},{\"name\":\"Cravatte\",\"group\":1},{\"name\":\"Count\",\"group\":1},{\"name\":\"OldMan\",\"group\":1},{\"name\":\"Labarre\",\"group\":2},{\"name\":\"Valjean\",\"group\":2},{\"name\":\"Marguerite\",\"group\":3},{\"name\":\"Mme.deR\",\"group\":2},{\"name\":\"Isabeau\",\"group\":2},{\"name\":\"Gervais\",\"group\":2},{\"name\":\"Tholomyes\",\"group\":3},{\"name\":\"Listolier\",\"group\":3},{\"name\":\"Fameuil\",\"group\":3},{\"name\":\"Blacheville\",\"group\":3},{\"name\":\"Favourite\",\"group\":3},{\"name\":\"Dahlia\",\"group\":3},{\"name\":\"Zephine\",\"group\":3},{\"name\":\"Fantine\",\"group\":3},{\"name\":\"Mme.Thenardier\",\"group\":4},{\"name\":\"Thenardier\",\"group\":4},{\"name\":\"Cosette\",\"group\":5},{\"name\":\"Javert\",\"group\":4},{\"name\":\"Fauchelevent\",\"group\":0},{\"name\":\"Bamatabois\",\"group\":2},{\"name\":\"Perpetue\",\"group\":3},{\"name\":\"Simplice\",\"group\":2},{\"name\":\"Scaufflaire\",\"group\":2},{\"name\":\"Woman1\",\"group\":2},{\"name\":\"Judge\",\"group\":2},{\"name\":\"Champmathieu\",\"group\":2},{\"name\":\"Brevet\",\"group\":2},{\"name\":\"Chenildieu\",\"group\":2},{\"name\":\"Cochepaille\",\"group\":2},{\"name\":\"Pontmercy\",\"group\":4},{\"name\":\"Boulatruelle\",\"group\":6},{\"name\":\"Eponine\",\"group\":4},{\"name\":\"Anzelma\",\"group\":4},{\"name\":\"Woman2\",\"group\":5},{\"name\":\"MotherInnocent\",\"group\":0},{\"name\":\"Gribier\",\"group\":0},{\"name\":\"Jondrette\",\"group\":7},{\"name\":\"Mme.Burgon\",\"group\":7},{\"name\":\"Gavroche\",\"group\":8},{\"name\":\"Gillenormand\",\"group\":5},{\"name\":\"Magnon\",\"group\":5}\r\n          ,{\"name\":\"Mlle.Gillenormand\",\"group\":5},{\"name\":\"Mme.Pontmercy\",\"group\":5},{\"name\":\"Mlle.Vaubois\",\"group\":5},{\"name\":\"Lt.Gillenormand\",\"group\":5},{\"name\":\"Marius\",\"group\":8},{\"name\":\"BaronessT\",\"group\":5},{\"name\":\"Mabeuf\",\"group\":8},{\"name\":\"Enjolras\",\"group\":8},{\"name\":\"Combeferre\",\"group\":8},{\"name\":\"Prouvaire\",\"group\":8},{\"name\":\"Feuilly\",\"group\":8},{\"name\":\"Courfeyrac\",\"group\":8},{\"name\":\"Bahorel\",\"group\":8},{\"name\":\"Bossuet\",\"group\":8},{\"name\":\"Joly\",\"group\":8},{\"name\":\"Grantaire\",\"group\":8},{\"name\":\"MotherPlutarch\",\"group\":9},{\"name\":\"Gueulemer\",\"group\":4},{\"name\":\"Babet\",\"group\":4},{\"name\":\"Claquesous\",\"group\":4},{\"name\":\"Montparnasse\",\"group\":4},{\"name\":\"Toussaint\",\"group\":5},{\"name\":\"Child1\",\"group\":10},{\"name\":\"Child2\",\"group\":10},{\"name\":\"Brujon\",\"group\":4},{\"name\":\"Mme.Hucheloup\",\"group\":8}],\"links\":[{\"source\":1,\"target\":0,\"value\":1},{\"source\":2,\"target\":0,\"value\":8},{\"source\":3,\"target\":0,\"value\":10},{\"source\":3,\"target\":2,\"value\":6},{\"source\":4,\"target\":0,\"value\":1},{\"source\":5,\"target\":0,\"value\":1},{\"source\":6,\"target\":0,\"value\":1},{\"source\":7,\"target\":0,\"value\":1},{\"source\":8,\"target\":0,\"value\":2},{\"source\":9,\"target\":0,\"value\":1},{\"source\":11,\"target\":10,\"value\":1},{\"source\":11,\"target\":3,\"value\":3},{\"source\":11,\"target\":2,\"value\":3},{\"source\":11,\"target\":0,\"value\":5},{\"source\":12,\"target\":11,\"value\":1},{\"source\":13,\"target\":11,\"value\":1},{\"source\":14,\"target\":11,\"value\":1},{\"source\":15,\"target\":11,\"value\":1},{\"source\":17,\"target\":16,\"value\":4},{\"source\":18,\"target\":16,\"value\":4},{\"source\":18,\"target\":17,\"value\":4}\r\n          ,{\"source\":19,\"target\":16,\"value\":4},{\"source\":19,\"target\":17,\"value\":4},{\"source\":19,\"target\":18,\"value\":4},{\"source\":20,\"target\":16,\"value\":3},{\"source\":20,\"target\":17,\"value\":3},{\"source\":20,\"target\":18,\"value\":3},{\"source\":20,\"target\":19,\"value\":4},{\"source\":21,\"target\":16,\"value\":3},{\"source\":21,\"target\":17,\"value\":3},{\"source\":21,\"target\":18,\"value\":3},{\"source\":21,\"target\":19,\"value\":3},{\"source\":21,\"target\":20,\"value\":5},{\"source\":22,\"target\":16,\"value\":3},{\"source\":22,\"target\":17,\"value\":3},{\"source\":22,\"target\":18,\"value\":3},{\"source\":22,\"target\":19,\"value\":3},{\"source\":22,\"target\":20,\"value\":4},{\"source\":22,\"target\":21,\"value\":4},{\"source\":23,\"target\":16,\"value\":3},{\"source\":23,\"target\":17,\"value\":3},{\"source\":23,\"target\":18,\"value\":3},{\"source\":23,\"target\":19,\"value\":3},{\"source\":23,\"target\":20,\"value\":4},{\"source\":23,\"target\":21,\"value\":4},{\"source\":23,\"target\":22,\"value\":4},{\"source\":23,\"target\":12,\"value\":2},{\"source\":23,\"target\":11,\"value\":9},{\"source\":24,\"target\":23,\"value\":2},{\"source\":24,\"target\":11,\"value\":7},{\"source\":25,\"target\":24,\"value\":13},{\"source\":25,\"target\":23,\"value\":1},{\"source\":25,\"target\":11,\"value\":12},{\"source\":26,\"target\":24,\"value\":4},{\"source\":26,\"target\":11,\"value\":31},{\"source\":26,\"target\":16,\"value\":1},{\"source\":26,\"target\":25,\"value\":1},{\"source\":27,\"target\":11,\"value\":17},{\"source\":27,\"target\":23,\"value\":5},{\"source\":27,\"target\":25,\"value\":5},{\"source\":27,\"target\":24,\"value\":1},{\"source\":27,\"target\":26,\"value\":1},{\"source\":28,\"target\":11,\"value\":8},{\"source\":28,\"target\":27,\"value\":1},{\"source\":29,\"target\":23,\"value\":1}\r\n          ,{\"source\":29,\"target\":27,\"value\":1},{\"source\":29,\"target\":11,\"value\":2},{\"source\":30,\"target\":23,\"value\":1},{\"source\":31,\"target\":30,\"value\":2},{\"source\":31,\"target\":11,\"value\":3},{\"source\":31,\"target\":23,\"value\":2},{\"source\":31,\"target\":27,\"value\":1},{\"source\":32,\"target\":11,\"value\":1},{\"source\":33,\"target\":11,\"value\":2},{\"source\":33,\"target\":27,\"value\":1},{\"source\":34,\"target\":11,\"value\":3},{\"source\":34,\"target\":29,\"value\":2},{\"source\":35,\"target\":11,\"value\":3},{\"source\":35,\"target\":34,\"value\":3},{\"source\":35,\"target\":29,\"value\":2},{\"source\":36,\"target\":34,\"value\":2},{\"source\":36,\"target\":35,\"value\":2},{\"source\":36,\"target\":11,\"value\":2},{\"source\":36,\"target\":29,\"value\":1},{\"source\":37,\"target\":34,\"value\":2},{\"source\":37,\"target\":35,\"value\":2},{\"source\":37,\"target\":36,\"value\":2},{\"source\":37,\"target\":11,\"value\":2},{\"source\":37,\"target\":29,\"value\":1},{\"source\":38,\"target\":34,\"value\":2},{\"source\":38,\"target\":35,\"value\":2},{\"source\":38,\"target\":36,\"value\":2},{\"source\":38,\"target\":37,\"value\":2},{\"source\":38,\"target\":11,\"value\":2},{\"source\":38,\"target\":29,\"value\":1},{\"source\":39,\"target\":25,\"value\":1},{\"source\":40,\"target\":25,\"value\":1},{\"source\":41,\"target\":24,\"value\":2},{\"source\":41,\"target\":25,\"value\":3},{\"source\":42,\"target\":41,\"value\":2},{\"source\":42,\"target\":25,\"value\":2},{\"source\":42,\"target\":24,\"value\":1},{\"source\":43,\"target\":11,\"value\":3},{\"source\":43,\"target\":26,\"value\":1},{\"source\":43,\"target\":27,\"value\":1},{\"source\":44,\"target\":28,\"value\":3},{\"source\":44,\"target\":11,\"value\":1},{\"source\":45,\"target\":28,\"value\":2},{\"source\":47,\"target\":46,\"value\":1}\r\n          ,{\"source\":48,\"target\":47,\"value\":2},{\"source\":48,\"target\":25,\"value\":1},{\"source\":48,\"target\":27,\"value\":1},{\"source\":48,\"target\":11,\"value\":1},{\"source\":49,\"target\":26,\"value\":3},{\"source\":49,\"target\":11,\"value\":2},{\"source\":50,\"target\":49,\"value\":1},{\"source\":50,\"target\":24,\"value\":1},{\"source\":51,\"target\":49,\"value\":9},{\"source\":51,\"target\":26,\"value\":2},{\"source\":51,\"target\":11,\"value\":2},{\"source\":52,\"target\":51,\"value\":1},{\"source\":52,\"target\":39,\"value\":1},{\"source\":53,\"target\":51,\"value\":1},{\"source\":54,\"target\":51,\"value\":2},{\"source\":54,\"target\":49,\"value\":1},{\"source\":54,\"target\":26,\"value\":1},{\"source\":55,\"target\":51,\"value\":6},{\"source\":55,\"target\":49,\"value\":12},{\"source\":55,\"target\":39,\"value\":1},{\"source\":55,\"target\":54,\"value\":1},{\"source\":55,\"target\":26,\"value\":21},{\"source\":55,\"target\":11,\"value\":19},{\"source\":55,\"target\":16,\"value\":1},{\"source\":55,\"target\":25,\"value\":2},{\"source\":55,\"target\":41,\"value\":5},{\"source\":55,\"target\":48,\"value\":4},{\"source\":56,\"target\":49,\"value\":1},{\"source\":56,\"target\":55,\"value\":1},{\"source\":57,\"target\":55,\"value\":1},{\"source\":57,\"target\":41,\"value\":1},{\"source\":57,\"target\":48,\"value\":1},{\"source\":58,\"target\":55,\"value\":7},{\"source\":58,\"target\":48,\"value\":7},{\"source\":58,\"target\":27,\"value\":6},{\"source\":58,\"target\":57,\"value\":1},{\"source\":58,\"target\":11,\"value\":4},{\"source\":59,\"target\":58,\"value\":15},{\"source\":59,\"target\":55,\"value\":5},{\"source\":59,\"target\":48,\"value\":6},{\"source\":59,\"target\":57,\"value\":2},{\"source\":60,\"target\":48,\"value\":1},{\"source\":60,\"target\":58,\"value\":4},{\"source\":60,\"target\":59,\"value\":2}\r\n          ,{\"source\":61,\"target\":48,\"value\":2},{\"source\":61,\"target\":58,\"value\":6},{\"source\":61,\"target\":60,\"value\":2},{\"source\":61,\"target\":59,\"value\":5},{\"source\":61,\"target\":57,\"value\":1},{\"source\":61,\"target\":55,\"value\":1},{\"source\":62,\"target\":55,\"value\":9},{\"source\":62,\"target\":58,\"value\":17},{\"source\":62,\"target\":59,\"value\":13},{\"source\":62,\"target\":48,\"value\":7},{\"source\":62,\"target\":57,\"value\":2},{\"source\":62,\"target\":41,\"value\":1},{\"source\":62,\"target\":61,\"value\":6},{\"source\":62,\"target\":60,\"value\":3},{\"source\":63,\"target\":59,\"value\":5},{\"source\":63,\"target\":48,\"value\":5},{\"source\":63,\"target\":62,\"value\":6},{\"source\":63,\"target\":57,\"value\":2},{\"source\":63,\"target\":58,\"value\":4},{\"source\":63,\"target\":61,\"value\":3},{\"source\":63,\"target\":60,\"value\":2},{\"source\":63,\"target\":55,\"value\":1},{\"source\":64,\"target\":55,\"value\":5},{\"source\":64,\"target\":62,\"value\":12},{\"source\":64,\"target\":48,\"value\":5},{\"source\":64,\"target\":63,\"value\":4},{\"source\":64,\"target\":58,\"value\":10},{\"source\":64,\"target\":61,\"value\":6},{\"source\":64,\"target\":60,\"value\":2},{\"source\":64,\"target\":59,\"value\":9},{\"source\":64,\"target\":57,\"value\":1},{\"source\":64,\"target\":11,\"value\":1},{\"source\":65,\"target\":63,\"value\":5},{\"source\":65,\"target\":64,\"value\":7},{\"source\":65,\"target\":48,\"value\":3},{\"source\":65,\"target\":62,\"value\":5},{\"source\":65,\"target\":58,\"value\":5},{\"source\":65,\"target\":61,\"value\":5},{\"source\":65,\"target\":60,\"value\":2},{\"source\":65,\"target\":59,\"value\":5},{\"source\":65,\"target\":57,\"value\":1},{\"source\":65,\"target\":55,\"value\":2},{\"source\":66,\"target\":64,\"value\":3},{\"source\":66,\"target\":58,\"value\":3}\r\n          ,{\"source\":66,\"target\":59,\"value\":1},{\"source\":66,\"target\":62,\"value\":2},{\"source\":66,\"target\":65,\"value\":2},{\"source\":66,\"target\":48,\"value\":1},{\"source\":66,\"target\":63,\"value\":1},{\"source\":66,\"target\":61,\"value\":1},{\"source\":66,\"target\":60,\"value\":1},{\"source\":67,\"target\":57,\"value\":3},{\"source\":68,\"target\":25,\"value\":5},{\"source\":68,\"target\":11,\"value\":1},{\"source\":68,\"target\":24,\"value\":1},{\"source\":68,\"target\":27,\"value\":1},{\"source\":68,\"target\":48,\"value\":1},{\"source\":68,\"target\":41,\"value\":1},{\"source\":69,\"target\":25,\"value\":6},{\"source\":69,\"target\":68,\"value\":6},{\"source\":69,\"target\":11,\"value\":1},{\"source\":69,\"target\":24,\"value\":1},{\"source\":69,\"target\":27,\"value\":2},{\"source\":69,\"target\":48,\"value\":1},{\"source\":69,\"target\":41,\"value\":1},{\"source\":70,\"target\":25,\"value\":4},{\"source\":70,\"target\":69,\"value\":4},{\"source\":70,\"target\":68,\"value\":4},{\"source\":70,\"target\":11,\"value\":1},{\"source\":70,\"target\":24,\"value\":1},{\"source\":70,\"target\":27,\"value\":1},{\"source\":70,\"target\":41,\"value\":1},{\"source\":70,\"target\":58,\"value\":1},{\"source\":71,\"target\":27,\"value\":1},{\"source\":71,\"target\":69,\"value\":2},{\"source\":71,\"target\":68,\"value\":2},{\"source\":71,\"target\":70,\"value\":2},{\"source\":71,\"target\":11,\"value\":1},{\"source\":71,\"target\":48,\"value\":1},{\"source\":71,\"target\":41,\"value\":1},{\"source\":71,\"target\":25,\"value\":1},{\"source\":72,\"target\":26,\"value\":2},{\"source\":72,\"target\":27,\"value\":1},{\"source\":72,\"target\":11,\"value\":1},{\"source\":73,\"target\":48,\"value\":2},{\"source\":74,\"target\":48,\"value\":2},{\"source\":74,\"target\":73,\"value\":3},{\"source\":75,\"target\":69,\"value\":3}\r\n          ,{\"source\":75,\"target\":68,\"value\":3},{\"source\":75,\"target\":25,\"value\":3},{\"source\":75,\"target\":48,\"value\":1},{\"source\":75,\"target\":41,\"value\":1},{\"source\":75,\"target\":70,\"value\":1},{\"source\":75,\"target\":71,\"value\":1},{\"source\":76,\"target\":64,\"value\":1},{\"source\":76,\"target\":65,\"value\":1},{\"source\":76,\"target\":66,\"value\":1},{\"source\":76,\"target\":63,\"value\":1},{\"source\":76,\"target\":62,\"value\":1},{\"source\":76,\"target\":48,\"value\":1},{\"source\":76,\"target\":58,\"value\":1}\r\n          ]}"
 ,"description":"Matrix of interactions in the Les Miserables play from https://bost.ocks.org/mike/miserables/"
 ,"style":"/* CSS Styles */\r\n\r\n.background {\r\n  fill: #eee;\r\n}\r\n\r\nline {\r\n  stroke: #fff;\r\n}\r\n\r\ntext { fill: gray; font-size: xx-small; }\r\n\r\ntext.active {\r\n  fill: red;\r\n}"
 ,"script":"// D3 Script\r\nvar options = d3.select(\"#service\").insert(\"select\",\":first-child\").attr(\"id\",\"order\");\r\noptions.append(\"option\").attr(\"value\",\"name\").text(\"By name\");\r\noptions.append(\"option\").attr(\"value\",\"count\").text(\"By frequency\");\r\noptions.append(\"option\").attr(\"value\",\"group\").text(\"By cluster\");\r\n\r\n\r\nvar margin = {top: 80, left: 80, right: 0, bottom: 10},\r\n    width = 700,\r\n    height = 700;\r\n\r\nvar x = d3.scale.ordinal().rangeBands([0, width]),\r\n    z = d3.scale.linear().domain([0, 4]).clamp(true),\r\n    c = d3.scale.category10().domain(d3.range(10));\r\n\r\nvar svg = d3.select(\"#chart\").append(\"svg\")\r\n    .attr(\"width\", width + margin.left + margin.right)\r\n    .attr(\"height\", height + margin.top + margin.bottom)\r\n//    .style(\"margin-left\", -margin.left + \"px\")\r\n  .append(\"g\")\r\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\nd3.json(\"$$this$$\", function(miserables) {\r\n  var matrix = [],\r\n      nodes = miserables.nodes,\r\n      n = nodes.length;\r\n\r\n  // Compute index per node.\r\n  nodes.forEach(function(node, i) {\r\n    node.index = i;\r\n    node.count = 0;\r\n    matrix[i] = d3.range(n).map(function(j) { return {x: j, y: i, z: 0}; });\r\n  });\r\n\r\n  // Convert links to matrix; count character occurrences.\r\n  miserables.links.forEach(function(link) {\r\n    matrix[link.source][link.target].z += link.value;\r\n    matrix[link.target][link.source].z += link.value;\r\n    matrix[link.source][link.source].z += link.value;\r\n    matrix[link.target][link.target].z += link.value;\r\n    nodes[link.source].count += link.value;\r\n    nodes[link.target].count += link.value;\r\n  });\r\n\r\n  // Precompute the orders.\r\n  var orders = {\r\n    name: d3.range(n).sort(function(a, b) { return d3.ascending(nodes[a].name, nodes[b].name); }),\r\n    count: d3.range(n).sort(function(a, b) { return nodes[b].count - nodes[a].count; }),\r\n    group: d3.range(n).sort(function(a, b) { return nodes[b].group - nodes[a].group; })\r\n  };\r\n\r\n  // The default sort order.\r\n  x.domain(orders.name);\r\n\r\n  svg.append(\"rect\")\r\n      .attr(\"class\", \"background\")\r\n      .attr(\"width\", width)\r\n      .attr(\"height\", height);\r\n\r\n  var row = svg.selectAll(\".row\")\r\n      .data(matrix)\r\n    .enter().append(\"g\")\r\n      .attr(\"class\", \"row\")\r\n      .attr(\"transform\", function(d, i) { return \"translate(0,\" + x(i) + \")\"; })\r\n      .each(row);\r\n\r\n  row.append(\"line\")\r\n      .attr(\"x2\", width);\r\n\r\n  row.append(\"text\")\r\n      .attr(\"x\", -6)\r\n      .attr(\"y\", x.rangeBand() / 2)\r\n      .attr(\"dy\", \".32em\")\r\n      .attr(\"text-anchor\", \"end\")\r\n      .text(function(d, i) { return nodes[i].name; });\r\n\r\n  var column = svg.selectAll(\".column\")\r\n      .data(matrix)\r\n    .enter().append(\"g\")\r\n      .attr(\"class\", \"column\")\r\n      .attr(\"transform\", function(d, i) { return \"translate(\" + x(i) + \")rotate(-90)\"; });\r\n\r\n  column.append(\"line\")\r\n      .attr(\"x1\", -width);\r\n\r\n  column.append(\"text\")\r\n      .attr(\"x\", 6)\r\n      .attr(\"y\", x.rangeBand() / 2)\r\n      .attr(\"dy\", \".32em\")\r\n      .attr(\"text-anchor\", \"start\")\r\n      .text(function(d, i) { return nodes[i].name; });\r\n\r\n  function row(row) {\r\n    var cell = d3.select(this).selectAll(\".cell\")\r\n        .data(row.filter(function(d) { return d.z; }))\r\n      .enter().append(\"rect\")\r\n        .attr(\"class\", \"cell\")\r\n        .attr(\"x\", function(d) { return x(d.x); })\r\n        .attr(\"width\", x.rangeBand())\r\n        .attr(\"height\", x.rangeBand())\r\n        .style(\"fill-opacity\", function(d) { return z(d.z); })\r\n        .style(\"fill\", function(d) { return nodes[d.x].group == nodes[d.y].group ? c(nodes[d.x].group) : null; })\r\n        .on(\"mouseover\", mouseover)\r\n        .on(\"mouseout\", mouseout);\r\n  }\r\n\r\n  function mouseover(p) {\r\n    d3.selectAll(\".row text\").classed(\"active\", function(d, i) { return i == p.y; });\r\n    d3.selectAll(\".column text\").classed(\"active\", function(d, i) { return i == p.x; });\r\n  }\r\n\r\n  function mouseout() {\r\n    d3.selectAll(\"text\").classed(\"active\", false);\r\n  }\r\n\r\n  d3.select(\"#order\").on(\"change\", function() {\r\n    clearTimeout(timeout);\r\n    order(this.value);\r\n  });\r\n\r\n  function order(value) {\r\n    x.domain(orders[value]);\r\n\r\n    var t = svg.transition().duration(2500);\r\n\r\n    t.selectAll(\".row\")\r\n        .delay(function(d, i) { return x(i) * 4; })\r\n        .attr(\"transform\", function(d, i) { return \"translate(0,\" + x(i) + \")\"; })\r\n      .selectAll(\".cell\")\r\n        .delay(function(d) { return x(d.x) * 4; })\r\n        .attr(\"x\", function(d) { return x(d.x); });\r\n\r\n    t.selectAll(\".column\")\r\n        .delay(function(d, i) { return x(i) * 4; })\r\n        .attr(\"transform\", function(d, i) { return \"translate(\" + x(i) + \")rotate(-90)\"; });\r\n  }\r\n\r\n  var timeout = setTimeout(function() {\r\n    order(\"group\");\r\n    d3.select(\"#order\").property(\"selectedIndex\", 2).node().focus();\r\n  }, 5000);\r\n});"
 ,"plugins": [] },
{"@rid":"33:12", "@class":"D3Script"
, "name":"Polar Clock"
 ,"dataScript":""
 ,"description":"Derived from http://bl.ocks.org/mbostock/1096355\r\nExtended to display milliseconds arc by Glenn Irwin"
 ,"style":"/* CSS Styles */\r\n.arc-text {\r\n  font: 16px sans-serif;\r\n  fill: white;\r\n}"
 ,"script":"// D3 Script\r\nvar width = d3.select('#chart').node().getBoundingClientRect().width,\r\n    height = d3.select('#chart').node().getBoundingClientRect().height,\r\n\tradius = Math.min(width, height) / 1.9,\r\n    spacing = .09;\r\n\r\nconsole.log(\"w=\"+width+\" h=\"+height);\r\nvar formatMilliSecond = d3.time.format(\"%-L milliseconds\"),\r\n    formatSecond = d3.time.format(\"%-S seconds\"),\r\n    formatMinute = d3.time.format(\"%-M minutes\"),\r\n    formatHour = d3.time.format(\"%-H hours\"),\r\n    formatDay = d3.time.format(\"%A\"),\r\n    formatDate = function(d) { d = d.getDate(); switch (10 <= d && d <= 19 ? 10 : d % 10) { case 1: d += \"st\"; break; case 2: d += \"nd\"; break; case 3: d += \"rd\"; break; default: d += \"th\"; break; } return d; },\r\n    formatMonth = d3.time.format(\"%B\");\r\n\r\nvar color = d3.scale.linear()\r\n    .range([\"hsl(-180,60%,50%)\", \"hsl(180,60%,50%)\"])\r\n    .interpolate(function(a, b) { var i = d3.interpolateString(a, b); return function(t) { return d3.hsl(i(t)); }; });\r\n\r\nvar arcBody = d3.svg.arc()\r\n    .startAngle(0)\r\n    .endAngle(function(d) { return d.value * 2 * Math.PI; })\r\n    .innerRadius(function(d) { return d.index * radius; })\r\n    .outerRadius(function(d) { return (d.index + (d.index == 0.8 ? 0.01 : spacing)) * radius; })\r\n    .cornerRadius(6);\r\n\r\nvar arcCenter = d3.svg.arc()\r\n    .startAngle(0)\r\n    .endAngle(function(d) { return d.value * 2 * Math.PI; })\r\n    .innerRadius(function(d) { return (d.index + spacing / 2) * radius; })\r\n    .outerRadius(function(d) { return (d.index + spacing / 2) * radius; });\r\n\r\nvar svg = d3.select(\"#chart\").append(\"svg\")\r\n    .attr(\"width\", width)\r\n    .attr(\"height\", height)\r\n  .append(\"g\")\r\n    .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\r\n\r\nvar field = svg.selectAll(\"g\")\r\n    .data(fields)\r\n  .enter().append(\"g\");\r\n\r\nfield.append(\"path\")\r\n    .attr(\"class\", \"arc-body\");\r\n\r\nfield.append(\"path\")\r\n    .attr(\"id\", function(d, i) { return \"arc-center-\" + i; })\r\n    .attr(\"class\", \"arc-center\");\r\n\r\nfield.append(\"text\")\r\n    .attr(\"dy\", \".35em\")\r\n    .attr(\"dx\", \".75em\")\r\n    .style(\"text-anchor\", \"start\")\r\n  .append(\"textPath\")\r\n    .attr(\"startOffset\", \"50%\")\r\n    .attr(\"class\", \"arc-text\")\r\n    .attr(\"xlink:href\", function(d, i) { return \"#arc-center-\" + i; });\r\n\r\ntick();\r\n\r\n//d3.select(self.frameElement).style(\"height\", height + \"px\");\r\n\r\nfunction tick() {\r\n  if (!document.hidden) {\r\n    field.each(function(d) { this._value = d.value; })\r\n      .data(fields)\r\n      .each(function(d) { d.previousValue = this._value; })\r\n        .transition()\r\n          .ease(\"elastic\")\r\n          .duration(30)\r\n          .each(fieldTransition);\r\n  }\r\n  setTimeout(tick, Date.now() % 30);\r\n}\r\n\r\nfunction fieldTransition() {\r\n  var field = d3.select(this).transition();\r\n\r\n  field.select(\".arc-body\")\r\n      .attrTween(\"d\", arcTween(arcBody))\r\n      .style(\"fill\", function(d) { return color(d.value); });\r\n\r\n  field.select(\".arc-center\")\r\n      .attrTween(\"d\", arcTween(arcCenter));\r\n\r\n  field.select(\".arc-text\")\r\n      .text(function(d) { return d.index == 0.8 ? \"\" : d.text; });\r\n}\r\n\r\nfunction arcTween(arc) {\r\n  return function(d) {\r\n    var i = d3.interpolateNumber(d.previousValue, d.value);\r\n    return function(t) {\r\n      d.value = i(t);\r\n      return arc(d);\r\n    };\r\n  };\r\n}\r\n\r\nfunction fields() {\r\n  var now = new Date;\r\n  return [\r\n    {index: .8, text: formatMilliSecond(now), value: now.getMilliseconds() /1000},\r\n    {index: .7, text: formatSecond(now), value: now.getSeconds() / 60 + now.getMilliseconds()/1000 /60},\r\n    {index: .6, text: formatMinute(now), value: now.getMinutes() / 60},\r\n    {index: .5, text: formatHour(now),   value: now.getHours() / 24},\r\n    {index: .3, text: formatDay(now),    value: now.getDay() / 7},\r\n    {index: .2, text: formatDate(now),   value: (now.getDate() - 1) / (32 - new Date(now.getYear(), now.getMonth(), 32).getDate())},\r\n    {index: .1, text: formatMonth(now),  value: now.getMonth() / 12}\r\n  ];\r\n  \r\nfunction resize(e){\r\n\tconsole.log(\"resize\");\r\n    width = d3.select('#chart').node().getBoundingClientRect().width; \r\n    height = d3.select('#chart').node().getBoundingClientRect().height;\r\n    radius = Math.min(width, height) / 1.9;\r\n    svg.attr('width', width)\r\n      .attr('height', height)\r\n      .append(\"g\")\r\n        .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\r\n   tick();\r\n}\r\nd3.select('#chart').on('resize', resize);\r\n}"
 ,"plugins": [] }
 ] }
